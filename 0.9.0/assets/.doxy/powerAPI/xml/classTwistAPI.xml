<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classTwistAPI" kind="class" language="C++" prot="public">
    <compoundname>TwistAPI</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTwistAPI_1a046bc798f7aa9150b4665121a9ec1c77" prot="private" static="no" mutable="no">
        <type>twist_version_t</type>
        <definition>twist_version_t TwistAPI::twist_version</definition>
        <argsstring></argsstring>
        <name>twist_version</name>
        <qualifiedname>TwistAPI::twist_version</qualifiedname>
        <initializer>= shield_other</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="56" column="17" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTwistAPI_1a19c7b1bc378e6f325f989889cb05a0e1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TwistAPI::twist_init</definition>
        <argsstring></argsstring>
        <name>twist_init</name>
        <qualifiedname>TwistAPI::twist_init</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="57" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classTwistAPI_1aef70cbaac83f49963d23c5b75ae58f72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>hrtim_tu_number_t</type>
        <definition>hrtim_tu_number_t TwistAPI::spinNumberToTu</definition>
        <argsstring>(uint16_t spin_number)</argsstring>
        <name>spinNumberToTu</name>
        <qualifiedname>TwistAPI::spinNumberToTu</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>spin_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="59" column="19" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="33" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classTwistAPI_1ad3fa84f44fa2b15ba82acce14438b376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setVersion</definition>
        <argsstring>(twist_version_t twist_ver)</argsstring>
        <name>setVersion</name>
        <qualifiedname>TwistAPI::setVersion</qualifiedname>
        <param>
          <type>twist_version_t</type>
          <declname>twist_ver</declname>
        </param>
        <briefdescription>
<para>Set the hardware version of the board. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shield</parametername>
</parameternamelist>
<parameterdescription>
<para>shield version - shield_TWIST_V1_2, shield_TWIST_V1_3, shield_ownverter or shield_other</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>You need to call this function BEFORE initializing a leg, after that it is not possible to change the shield version </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="70" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="65" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1adaf2cf198c41d0536b6de1a41281f97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initLegMode</definition>
        <argsstring>(leg_t leg, hrtim_switch_convention_t leg_convention, hrtim_pwm_mode_t leg_mode)</argsstring>
        <name>initLegMode</name>
        <qualifiedname>TwistAPI::initLegMode</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>hrtim_switch_convention_t</type>
          <declname>leg_convention</declname>
        </param>
        <param>
          <type>hrtim_pwm_mode_t</type>
          <declname>leg_mode</declname>
        </param>
        <briefdescription>
<para>Initialize the power mode for a given leg. </para>
        </briefdescription>
        <detaileddescription>
<para>This function configures modulation, frequency, phase shift, dead time, and other parameters for power control of a specified leg.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leg_convention</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM Switch to be driven by the duty cycle. The other will be complementary - PWMx1 or PWMx2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leg_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM mode - VOLTAGE_MODE or CURRENT_MODE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Configure which External Event will reset the timer for current mode.</para>
<para>COMPARATOR1_INP/PA1 ----------&gt; + - &lt;-------<mdash/> DAC3 ch1 | | v EEV4</para>
<para>COMPARATOR3_INP/PC1 ----------&gt; + - &lt;-------<mdash/> DAC1 ch1 | | v EEV5</para>
<para>/!\ WARNING : Current mode is currently only supported for BUCK /!\</para>
<para>Configure PWM adc trigger. ADC_TRIG1 trigger ADC1, and ADC_TRIG3 trigger ADC2</para>
<para>Choose which dac control the leg in current mode</para>
<para>Only relevant for twist and ownverter hardware, to enable optocouplers for mosfet driver and connection to electrolytic capacitor</para>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="82" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="74" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a4957e23c490640c896d5441e8b7f8299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initAllMode</definition>
        <argsstring>(hrtim_switch_convention_t leg_convention, hrtim_pwm_mode_t leg_mode)</argsstring>
        <name>initAllMode</name>
        <qualifiedname>TwistAPI::initAllMode</qualifiedname>
        <param>
          <type>hrtim_switch_convention_t</type>
          <declname>leg_convention</declname>
        </param>
        <param>
          <type>hrtim_pwm_mode_t</type>
          <declname>leg_mode</declname>
        </param>
        <briefdescription>
<para>Initialize power modes for all legs. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the power modes for each leg with the specified &apos;buck&apos; and &apos;voltage_mode&apos; settings.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg_convention</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM Switch to be driven by the duty cycle. The other will be complementary - PWMx1 or PWMx2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leg_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM mode - VOLTAGE_MODE or CURRENT_MODE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="93" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a8268f967c30cd8564a331ff98dc65e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegDutyCycle</definition>
        <argsstring>(leg_t leg, float32_t duty_leg)</argsstring>
        <name>setLegDutyCycle</name>
        <qualifiedname>TwistAPI::setLegDutyCycle</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>duty_leg</declname>
        </param>
        <briefdescription>
<para>Set the duty cycle for a specific leg&apos;s power control. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the duty cycle for the power control of a specified leg. The duty cycle determines the ON/OFF ratio of the power signal for the leg.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg for which to set the duty cycle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duty_leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The duty cycle value to set (a floating-point number between 0.1 and 0.9). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="104" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="173" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1ab960c3ffc3aa9dc60e4c90ae886ede85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllDutyCycle</definition>
        <argsstring>(float32_t duty_all)</argsstring>
        <name>setAllDutyCycle</name>
        <qualifiedname>TwistAPI::setAllDutyCycle</qualifiedname>
        <param>
          <type>float32_t</type>
          <declname>duty_all</declname>
        </param>
        <briefdescription>
<para>Set the duty cycle for power control of all the legs. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the same duty cycle for power control of all the legs. The duty cycle determines the ON/OFF ratio of the power signal for all legs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duty_all</parametername>
</parameternamelist>
<parameterdescription>
<para>The duty cycle value to set (a floating-point number between 0.1 and 0.9). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="114" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a20825736c5146b35b1318e2e85e69e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::startLeg</definition>
        <argsstring>(leg_t leg)</argsstring>
        <name>startLeg</name>
        <qualifiedname>TwistAPI::startLeg</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <briefdescription>
<para>Start power output for a specific leg. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initiates the power output for a specified leg by starting the PWM subunits associated with the leg&apos;s output pins. If the leg&apos;s output pins are not declared inactive in the device tree, the corresponding subunits are started. eg. If output1 is declared inactive in the device tree, PWMA1 will not start</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg for which to start the power output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Only relevant for twist hardware, to enable optocouplers for mosfet driver</para>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="126" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1ab9229f9f4e160368ed19a091b67e42cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::connectLegCapacitor</definition>
        <argsstring>(leg_t leg)</argsstring>
        <name>connectLegCapacitor</name>
        <qualifiedname>TwistAPI::connectLegCapacitor</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <briefdescription>
<para>Connect the electrolytic capacitor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The selected leg for which to connect the capacitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="133" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1ab42e4f3dc7452a845fb810112e127139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::startAll</definition>
        <argsstring>()</argsstring>
        <name>startAll</name>
        <qualifiedname>TwistAPI::startAll</qualifiedname>
        <briefdescription>
<para>Start power output for all legs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="138" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="215" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a1a3d88e55e5dc4b73dcdc585caad9e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::connectAllCapacitor</definition>
        <argsstring>()</argsstring>
        <name>connectAllCapacitor</name>
        <qualifiedname>TwistAPI::connectAllCapacitor</qualifiedname>
        <briefdescription>
<para>Connect the electrolyt capacitor to all the legs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="143" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a27e09d3139ab97fa27501881ccb68706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::stopLeg</definition>
        <argsstring>(leg_t leg)</argsstring>
        <name>stopLeg</name>
        <qualifiedname>TwistAPI::stopLeg</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <briefdescription>
<para>Stop power output for a specific leg. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg for which to stop the power output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Only relevant for twist hardware, to disable optocouplers for mosfet driver</para>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="150" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="231" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a02eca78e0c41e538fa3cb2a9ab7d6e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::disconnectLegCapacitor</definition>
        <argsstring>(leg_t leg)</argsstring>
        <name>disconnectLegCapacitor</name>
        <qualifiedname>TwistAPI::disconnectLegCapacitor</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <briefdescription>
<para>Disonnect the electrolytic capacitor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The selected leg for which to disonnect the capacitor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="157" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1af1ea84d7a25afa660c5ce9e6d8387fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::stopAll</definition>
        <argsstring>()</argsstring>
        <name>stopAll</name>
        <qualifiedname>TwistAPI::stopAll</qualifiedname>
        <briefdescription>
<para>Stop power output for all legs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="162" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a370a51d44afb2088476449f53f8ad575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::disconnectAllCapacitor</definition>
        <argsstring>()</argsstring>
        <name>disconnectAllCapacitor</name>
        <qualifiedname>TwistAPI::disconnectAllCapacitor</qualifiedname>
        <briefdescription>
<para>disconnect the electrolyt capacitor to all the legs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="167" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="255" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a6f79bf7751b509e776f78e734f904a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegTriggerValue</definition>
        <argsstring>(leg_t leg, float32_t trigger_value)</argsstring>
        <name>setLegTriggerValue</name>
        <qualifiedname>TwistAPI::setLegTriggerValue</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>trigger_value</declname>
        </param>
        <briefdescription>
<para>Set the trigger value for a specific leg&apos;s ADC trigger. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the trigger value for the ADC trigger of a specified leg. The trigger value determines the level at which the ADC trigger is activated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg for which to set the ADC trigger value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigger_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The trigger value to set between 0.05 and 0.95. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="178" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="286" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1af0c11304c6d976b05c4f331ccc9cd41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllTriggerValue</definition>
        <argsstring>(float32_t trigger_value)</argsstring>
        <name>setAllTriggerValue</name>
        <qualifiedname>TwistAPI::setAllTriggerValue</qualifiedname>
        <param>
          <type>float32_t</type>
          <declname>trigger_value</declname>
        </param>
        <briefdescription>
<para>Set the trigger value for the ADC trigger of all the legs. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the same trigger value for the ADC trigger of all the legs. The trigger value determines the level at which the ADC trigger is activated for all legs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trigger_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The trigger value to set for all the legs between 0.0 and 1.0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="188" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="296" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a511a16009bcc9da86ea9529a9063c396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegPhaseShift</definition>
        <argsstring>(leg_t leg, int16_t phase_shift)</argsstring>
        <name>setLegPhaseShift</name>
        <qualifiedname>TwistAPI::setLegPhaseShift</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>phase_shift</declname>
        </param>
        <briefdescription>
<para>Set the phase shift value for a specific leg&apos;s power control. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg for which to set the phase shift value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>The phase shift value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="196" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a8272b08f8716ceff4b3b2acaa20b16d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllPhaseShift</definition>
        <argsstring>(int16_t phase_shift)</argsstring>
        <name>setAllPhaseShift</name>
        <qualifiedname>TwistAPI::setAllPhaseShift</qualifiedname>
        <param>
          <type>int16_t</type>
          <declname>phase_shift</declname>
        </param>
        <briefdescription>
<para>Set the phase shift value for all the legs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phase_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>The phase shift value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="203" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a1d762fb899aa1ccc0f4fb41654384e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegSlopeCompensation</definition>
        <argsstring>(leg_t leg, float32_t set_voltage, float32_t reset_voltage)</argsstring>
        <name>setLegSlopeCompensation</name>
        <qualifiedname>TwistAPI::setLegSlopeCompensation</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>set_voltage</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>reset_voltage</declname>
        </param>
        <briefdescription>
<para>Set the slope compensation in current mode for a leg. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>The leg to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set_voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>in volt, the DAC peak voltage for slope compensation (value between 0 and 2.048) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset_voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>in volt, the DAC lowest voltage for slope compensation (value between 0 and 2.048)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Be sure that set_voltage &gt; reset_voltage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="214" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="263" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1ab4d97717a70c2e66cc5f08bb4ca44490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllSlopeCompensation</definition>
        <argsstring>(float32_t set_voltage, float32_t reset_voltage)</argsstring>
        <name>setAllSlopeCompensation</name>
        <qualifiedname>TwistAPI::setAllSlopeCompensation</qualifiedname>
        <param>
          <type>float32_t</type>
          <declname>set_voltage</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>reset_voltage</declname>
        </param>
        <briefdescription>
<para>Set the slope compensation in current mode for all the leg. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set_voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>in volt, the DAC peak voltage for slope compensation (value between 0 and 2.048) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset_voltage</parametername>
</parameternamelist>
<parameterdescription>
<para>in volt, the DAC lowest voltage for slope compensation (value between 0 and 2.048)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Be sure that set_voltage &gt; reset_voltage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="224" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a60f2ff621f6e38517e8c3a92a31c0bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegDeadTime</definition>
        <argsstring>(leg_t leg, uint16_t ns_rising_dt, uint16_t ns_falling_dt)</argsstring>
        <name>setLegDeadTime</name>
        <qualifiedname>TwistAPI::setLegDeadTime</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ns_rising_dt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ns_falling_dt</declname>
        </param>
        <briefdescription>
<para>set the dead time value for a leg </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>- the leg for which to set dead time value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns_rising_dt</parametername>
</parameternamelist>
<parameterdescription>
<para>- rising dead time value in ns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns_falling_dt</parametername>
</parameternamelist>
<parameterdescription>
<para>- falling dead time value in ns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="233" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1ae68fdea676f7ef3d3045637bae97fba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllDeadTime</definition>
        <argsstring>(uint16_t ns_rising_dt, uint16_t ns_falling_dt)</argsstring>
        <name>setAllDeadTime</name>
        <qualifiedname>TwistAPI::setAllDeadTime</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>ns_rising_dt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ns_falling_dt</declname>
        </param>
        <briefdescription>
<para>set the dead time value for all legs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ns_rising_dt</parametername>
</parameternamelist>
<parameterdescription>
<para>- rising dead time value in ns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns_falling_dt</parametername>
</parameternamelist>
<parameterdescription>
<para>- falling dead time value in ns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="241" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="327" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a9fc300c71a486aa06762976089e4c145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setLegAdcDecim</definition>
        <argsstring>(leg_t leg, uint16_t adc_decim)</argsstring>
        <name>setLegAdcDecim</name>
        <qualifiedname>TwistAPI::setLegAdcDecim</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>adc_decim</declname>
        </param>
        <briefdescription>
<para>set ADC decimator for a leg </para>
        </briefdescription>
        <detaileddescription>
<para>this function sets the number of event which will be ignored between two events. ie. you divide the number of trigger in a fixed period. For example if adc_decim = 1, nothing changes but with adc_decims = 2 you have twice less adc trigger.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>- leg for which to set adc decimator value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adc_decim</parametername>
</parameternamelist>
<parameterdescription>
<para>- adc decimator, a number between 1 and 32 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="254" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a092b1f640d3a83a4a6c4d67c45bddd79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::setAllAdcDecim</definition>
        <argsstring>(uint16_t adc_decim)</argsstring>
        <name>setAllAdcDecim</name>
        <qualifiedname>TwistAPI::setAllAdcDecim</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>adc_decim</declname>
        </param>
        <briefdescription>
<para>set ADC decimator for all legs </para>
        </briefdescription>
        <detaileddescription>
<para>this function sets the number of event which will be ignored between two events. ie. you divide the number of trigger in a fixed period. For example if adc_decim = 1, nothing changes but with adc_decims = 2 you have twice less adc trigger.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_decim</parametername>
</parameternamelist>
<parameterdescription>
<para>- adc decimator, a number between 1 and 32 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="266" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a26f12ef8aef60f55fe058f8ccff1d76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initLegBuck</definition>
        <argsstring>(leg_t leg, hrtim_pwm_mode_t leg_mode=VOLTAGE_MODE)</argsstring>
        <name>initLegBuck</name>
        <qualifiedname>TwistAPI::initLegBuck</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <param>
          <type>hrtim_pwm_mode_t</type>
          <declname>leg_mode</declname>
          <defval>VOLTAGE_MODE</defval>
        </param>
        <briefdescription>
<para>Initialise a leg for buck topology. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>Leg to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leg_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM mode - VOLTAGE_MODE or CURRENT_MODE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="275" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a3c03b975be5c5399d250a55f2765fd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initAllBuck</definition>
        <argsstring>(hrtim_pwm_mode_t leg_mode=VOLTAGE_MODE)</argsstring>
        <name>initAllBuck</name>
        <qualifiedname>TwistAPI::initAllBuck</qualifiedname>
        <param>
          <type>hrtim_pwm_mode_t</type>
          <declname>leg_mode</declname>
          <defval>VOLTAGE_MODE</defval>
        </param>
        <briefdescription>
<para>Initialise all the legs for buck topology. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM mode - VOLTAGE_MODE or CURRENT_MODE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="282" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="356" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a6e26fa356c5e9beb11efeaacf21425f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initLegBoost</definition>
        <argsstring>(leg_t leg)</argsstring>
        <name>initLegBoost</name>
        <qualifiedname>TwistAPI::initLegBoost</qualifiedname>
        <param>
          <type>leg_t</type>
          <declname>leg</declname>
        </param>
        <briefdescription>
<para>Initialise all the legs for boost topology, current mode is not supported for boost. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leg</parametername>
</parameternamelist>
<parameterdescription>
<para>Leg to initialize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="289" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="364" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classTwistAPI_1a288e5d7ba96e64729a0ae93e0d705a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TwistAPI::initAllBoost</definition>
        <argsstring>()</argsstring>
        <name>initAllBoost</name>
        <qualifiedname>TwistAPI::initAllBoost</qualifiedname>
        <briefdescription>
<para>Initialise all the legs for boost topology, current mode is not supported for boost. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="294" column="6" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.cpp" bodystart="372" bodyend="378"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" line="53" column="1" bodyfile="docs/core/zephyr/modules/owntech_power_api/zephyr/public_api/TwistAPI.h" bodystart="54" bodyend="295"/>
    <listofallmembers>
      <member refid="classTwistAPI_1a1a3d88e55e5dc4b73dcdc585caad9e3b" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>connectAllCapacitor</name></member>
      <member refid="classTwistAPI_1ab9229f9f4e160368ed19a091b67e42cb" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>connectLegCapacitor</name></member>
      <member refid="classTwistAPI_1a370a51d44afb2088476449f53f8ad575" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>disconnectAllCapacitor</name></member>
      <member refid="classTwistAPI_1a02eca78e0c41e538fa3cb2a9ab7d6e75" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>disconnectLegCapacitor</name></member>
      <member refid="classTwistAPI_1a288e5d7ba96e64729a0ae93e0d705a31" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initAllBoost</name></member>
      <member refid="classTwistAPI_1a3c03b975be5c5399d250a55f2765fd04" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initAllBuck</name></member>
      <member refid="classTwistAPI_1a4957e23c490640c896d5441e8b7f8299" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initAllMode</name></member>
      <member refid="classTwistAPI_1a6e26fa356c5e9beb11efeaacf21425f8" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initLegBoost</name></member>
      <member refid="classTwistAPI_1a26f12ef8aef60f55fe058f8ccff1d76b" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initLegBuck</name></member>
      <member refid="classTwistAPI_1adaf2cf198c41d0536b6de1a41281f97c" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>initLegMode</name></member>
      <member refid="classTwistAPI_1a092b1f640d3a83a4a6c4d67c45bddd79" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllAdcDecim</name></member>
      <member refid="classTwistAPI_1ae68fdea676f7ef3d3045637bae97fba0" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllDeadTime</name></member>
      <member refid="classTwistAPI_1ab960c3ffc3aa9dc60e4c90ae886ede85" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllDutyCycle</name></member>
      <member refid="classTwistAPI_1a8272b08f8716ceff4b3b2acaa20b16d6" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllPhaseShift</name></member>
      <member refid="classTwistAPI_1ab4d97717a70c2e66cc5f08bb4ca44490" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllSlopeCompensation</name></member>
      <member refid="classTwistAPI_1af0c11304c6d976b05c4f331ccc9cd41a" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setAllTriggerValue</name></member>
      <member refid="classTwistAPI_1a9fc300c71a486aa06762976089e4c145" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegAdcDecim</name></member>
      <member refid="classTwistAPI_1a60f2ff621f6e38517e8c3a92a31c0bd4" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegDeadTime</name></member>
      <member refid="classTwistAPI_1a8268f967c30cd8564a331ff98dc65e9c" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegDutyCycle</name></member>
      <member refid="classTwistAPI_1a511a16009bcc9da86ea9529a9063c396" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegPhaseShift</name></member>
      <member refid="classTwistAPI_1a1d762fb899aa1ccc0f4fb41654384e22" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegSlopeCompensation</name></member>
      <member refid="classTwistAPI_1a6f79bf7751b509e776f78e734f904a99" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setLegTriggerValue</name></member>
      <member refid="classTwistAPI_1ad3fa84f44fa2b15ba82acce14438b376" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>setVersion</name></member>
      <member refid="classTwistAPI_1aef70cbaac83f49963d23c5b75ae58f72" prot="private" virt="non-virtual"><scope>TwistAPI</scope><name>spinNumberToTu</name></member>
      <member refid="classTwistAPI_1ab42e4f3dc7452a845fb810112e127139" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>startAll</name></member>
      <member refid="classTwistAPI_1a20825736c5146b35b1318e2e85e69e84" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>startLeg</name></member>
      <member refid="classTwistAPI_1af1ea84d7a25afa660c5ce9e6d8387fe2" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>stopAll</name></member>
      <member refid="classTwistAPI_1a27e09d3139ab97fa27501881ccb68706" prot="public" virt="non-virtual"><scope>TwistAPI</scope><name>stopLeg</name></member>
      <member refid="classTwistAPI_1a19c7b1bc378e6f325f989889cb05a0e1" prot="private" virt="non-virtual"><scope>TwistAPI</scope><name>twist_init</name></member>
      <member refid="classTwistAPI_1a046bc798f7aa9150b4665121a9ec1c77" prot="private" virt="non-virtual"><scope>TwistAPI</scope><name>twist_version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
