<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="PwmHAL_8h" kind="file" language="C++">
    <compoundname>PwmHAL.h</compoundname>
    <innerclass refid="classPwmHAL" prot="public">PwmHAL</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="PwmHAL_8h_1ac113654697b2b287e8fe02b99ef0c53a" prot="public" static="no" strong="no">
        <type></type>
        <name>leg_operation_t</name>
        <enumvalue id="PwmHAL_8h_1ac113654697b2b287e8fe02b99ef0c53aaa8dcfdc44f22d0bc037b434160907cd3" prot="public">
          <name>buck</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="PwmHAL_8h_1ac113654697b2b287e8fe02b99ef0c53aa80084a83d4b84aa7f15cd3a794c00d39" prot="public">
          <name>boost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Switch leg operation type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/PwmHAL.h" line="41" column="1" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/PwmHAL.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="PwmHAL_8h_1a7762890495ec19f400b7ca0bace5f4d5" prot="public" static="no" strong="no">
        <type></type>
        <name>inverter_modulation_t</name>
        <enumvalue id="PwmHAL_8h_1a7762890495ec19f400b7ca0bace5f4d5a08e819a90e3a116394312419aff3fbf5" prot="public">
          <name>unipolar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="PwmHAL_8h_1a7762890495ec19f400b7ca0bace5f4d5aaf941ae00aea56c2981c12f5848e4df5" prot="public">
          <name>bipolar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inverter leg operation type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/PwmHAL.h" line="49" column="1" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/PwmHAL.h" bodystart="50" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2023<sp/>LAAS-CNRS</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-2.1</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PWMHAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWMHAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stdlib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARM<sp/>lib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arm_math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OwnTech<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;adc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hrtim_enum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>buck,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>boost</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/>leg_operation_t;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>unipolar,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>bipolar</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/>inverter_modulation_t;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classPwmHAL" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPwmHAL" kindref="compound">PwmHAL</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HRTIM<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ada626c5c7319c8205df8596331d688fb" kindref="member">initUnit</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ac2900f6b49f6110a4b1aadacf120201a" kindref="member">startDualOutput</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a8bb44e5995a78e17a6545498184758e2" kindref="member">stopDualOutput</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a68b7bb1265a2b9af98cbd66d8c3252af" kindref="member">startSingleOutput</ref>(hrtim_tu_number_t<sp/>tu,<sp/>hrtim_output_number_t<sp/>output);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1af87a7e0c7647bee04c2401cd404d779e" kindref="member">stopSingleOutput</ref>(hrtim_tu_number_t<sp/>tu,<sp/>hrtim_output_number_t<sp/>output);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ace857487759978c81233cb4dcb1698e9" kindref="member">setModulation</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_cnt_t<sp/>modulation);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a9c8a6859818c4a5d4cb808003757ccd2" kindref="member">setSwitchConvention</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_switch_convention_t<sp/>convention);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ab2c2348d10f24e6caab2efa58f30cd48" kindref="member">initFrequency</ref>(uint32_t<sp/>init_frequency);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ab2c2348d10f24e6caab2efa58f30cd48" kindref="member">initFrequency</ref>(uint32_t<sp/>init_frequency,<sp/>uint32_t<sp/>minimal_frequency);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ab009fd531152f6d3a49742521feaf8e4" kindref="member">setDeadTime</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>uint16_t<sp/>rise_ns,<sp/>uint16_t<sp/>fall_ns);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1aafab44228a26febf53e40b09aa0d58eb" kindref="member">setDutyCycle</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>float32_t<sp/>duty_cycle);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a983afd187fcd21d980a5fbd9836588a6" kindref="member">setPhaseShift</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>int16_t<sp/>shift);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a3d02888d0a34aad51c5b5011c927ec15" kindref="member">setMode</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_pwm_mode_t<sp/>mode);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_pwm_mode_t<sp/><ref refid="classPwmHAL_1a3170ba7199d9b31f2d8655f2373c2683" kindref="member">getMode</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a9ed91c1b966e9372f134f25925ecab09" kindref="member">setEev</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_external_trigger_t<sp/>eev);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_external_trigger_t<sp/><ref refid="classPwmHAL_1adff079e739e876b5b6e10bfb04ca7408" kindref="member">getEev</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_cnt_t<sp/><ref refid="classPwmHAL_1a84947b82459f9b57ea20d8e096c2b98f" kindref="member">getModulation</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_switch_convention_t<sp/><ref refid="classPwmHAL_1a6e4cef4b010a4f01fc8f66f3dc4c0f96" kindref="member">getSwitchConvention</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classPwmHAL_1add5baa32e90605383539439104a3c520" kindref="member">getPeriod</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a0eca11286114ba4f2ecb01791c10599c" kindref="member">setAdcTriggerPostScaler</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>uint32_t<sp/>ps_ratio);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a932bbb5fb33ced22976eaa7fdf1d153c" kindref="member">setAdcTrigger</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_adc_trigger_t<sp/>adc_trig);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_adc_trigger_t<sp/><ref refid="classPwmHAL_1a9f3646646e5e29978e3254e922b794eb" kindref="member">getAdcTrigger</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_adc_trigger_t<sp/>adc_trig);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1afe92650407b6600dff96dcbc45fcd3bf" kindref="member">enableAdcTrigger</ref>(hrtim_tu_number_t<sp/>tu_number);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a3a1764fe6979d17e934f01791a1a8759" kindref="member">disableAdcTrigger</ref>(hrtim_tu_number_t<sp/>tu_number);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a4b426a6025a2189f49cabeb9fea8f718" kindref="member">setAdcTriggerInstant</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>float32_t<sp/>trig_val);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1aac2c7e1b0850373ef8be41cc6cc795f4" kindref="member">setAdcEdgeTrigger</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>hrtim_adc_edgetrigger_t<sp/>adc_edge_trigger);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hrtim_adc_edgetrigger_t<sp/><ref refid="classPwmHAL_1add731e413e7dbec507aabd5e121461cf" kindref="member">getAdcEdgeTrigger</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a57ad82936322d09ea21d8136b4a99adf" kindref="member">setAdcDecimation</ref>(hrtim_tu_number_t<sp/>pwmX,<sp/>uint32_t<sp/>decimation);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a87f02068cb744707860185045c86819f" kindref="member">disablePeriodEvnt</ref>(hrtim_tu_t<sp/>PWM_tu);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a350644c31ccf6b662c2f450f27118c56" kindref="member">setPeriodEvntRep</ref>(hrtim_tu_t<sp/>PWM_tu,<sp/>uint32_t<sp/>repetition);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classPwmHAL_1a18e7d18b48641e091ec414b85fe22342" kindref="member">getPeriodEvntRep</ref>(hrtim_tu_t<sp/>PWM_tu);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a5fe0a6f146efcc74d113c98b5e0b9499" kindref="member">configurePeriodEvnt</ref>(hrtim_tu_t<sp/>PWM_tu,<sp/>uint32_t<sp/>repetition,<sp/>hrtim_callback_t<sp/>callback);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1a4de7e5072911ef0066258f8426a8d2ad" kindref="member">enablePeriodEvnt</ref>(hrtim_tu_t<sp/>PWM_tu);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classPwmHAL_1a116866358e313d5425d5510ee4488df7" kindref="member">getPeriodUs</ref>(hrtim_tu_number_t<sp/>pwmX);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPwmHAL_1ac0f1af4b33a998900bd8ccb2268ceb9f" kindref="member">setFrequency</ref>(uint32_t<sp/>frequency_update);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>PWMHAL_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/PwmHAL.h"/>
  </compounddef>
</doxygen>
