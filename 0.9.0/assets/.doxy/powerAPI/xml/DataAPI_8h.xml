<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="DataAPI_8h" kind="file" language="C++">
    <compoundname>DataAPI.h</compoundname>
    <innerclass refid="classDataAPI" prot="public">DataAPI</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="DataAPI_8h_1acf2e25c3b66f5416e12556ff8651dd56" prot="public" static="no" strong="no">
        <type>uint8_t</type>
        <name>parameter_t</name>
        <enumvalue id="DataAPI_8h_1acf2e25c3b66f5416e12556ff8651dd56a5fdf95beef901fba4bdb3ac7e7668773" prot="public">
          <name>gain</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DataAPI_8h_1acf2e25c3b66f5416e12556ff8651dd56a330e576ee3e552e8f2f3f0056d68530b" prot="public">
          <name>offset</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="52" column="1" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="DataAPI_8h_1a30e77e0b6fd428a0cceed4edb1ddbd20" prot="public" static="no" strong="no">
        <type></type>
        <name>channel_t</name>
        <enumvalue id="DataAPI_8h_1a30e77e0b6fd428a0cceed4edb1ddbd20a95a9f4594fca644bea2ef0243f8dfb27" prot="public">
          <name>UNDEFINED_CHANNEL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DataAPI_8h_1a30e77e0b6fd428a0cceed4edb1ddbd20a4019476b139508bcdee7741eb5fecf96" prot="public">
          <name>DT_FOREACH_STATUS_OKAY</name>
          <initializer>=(adc_channels, CHANNEL_TOKEN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="71" column="1" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="DataAPI_8h_1a0f6f26beb5fa3e14ed5ec7b06b5ad239" prot="public" static="no" strong="yes">
        <type></type>
        <name>DispatchMethod_t</name>
        <enumvalue id="DataAPI_8h_1a0f6f26beb5fa3e14ed5ec7b06b5ad239a1367c215f4bda7d40a195a39c8f160f1" prot="public">
          <name>on_dma_interrupt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="DataAPI_8h_1a0f6f26beb5fa3e14ed5ec7b06b5ad239a9c47ef9d44d85ee3d47e518eae38071f" prot="public">
          <name>externally_triggered</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="78" column="1" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="79" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="DataAPI_8h_1a218ed7cf56ce6c9fd0e4ca350a2046cc" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t ADC_COUNT</definition>
        <argsstring></argsstring>
        <name>ADC_COUNT</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="89" column="22" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1a71dc98775c84164ddbea6b8d806e36ee" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t CHANNELS_PER_ADC</definition>
        <argsstring></argsstring>
        <name>CHANNELS_PER_ADC</name>
        <initializer>= 19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="90" column="22" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1a94c1ca90b86d8f2fc712c7f502e5a5cd" prot="public" static="no" mutable="no">
        <type>const float32_t</type>
        <definition>const float32_t NO_VALUE</definition>
        <argsstring></argsstring>
        <name>NO_VALUE</name>
        <initializer>= -10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="93" column="17" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1aa2d38fef56b37efc350a8d33ca783d52" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t DATA_IS_OK</definition>
        <argsstring></argsstring>
        <name>DATA_IS_OK</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="95" column="15" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1aa17a18779a2a33294650d0e56eb53aa9" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t DATA_IS_OLD</definition>
        <argsstring></argsstring>
        <name>DATA_IS_OLD</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="96" column="15" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1a4fdbe4c4b4e4ede5065de16b4965d47e" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t DATA_IS_MISSING</definition>
        <argsstring></argsstring>
        <name>DATA_IS_MISSING</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="97" column="15" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="DataAPI_8h_1adb0d8045416654c1cd036832f3374138" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="classDataAPI" kindref="compound">DataAPI</ref></type>
        <definition>DataAPI data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>2024</para>
</simplesect>
<simplesect kind="author"><para>Cl√©ment Foucher <ulink url="mailto:clement.foucher@laas.fr">clement.foucher@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Luiz Villa <ulink url="mailto:luiz.villa@laas.fr">luiz.villa@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Thomas Walter <ulink url="mailto:thomas.walter@laas.fr">thomas.walter@laas.fr</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" line="624" column="16" bodyfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.cpp" bodystart="48" bodyend="-1" declfile="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h" declline="624" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2023<sp/>LAAS-CNRS</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-2.1</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DATAAPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DATAAPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stdlib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zephyr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARM<sp/>CMSIS<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arm_math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Current<sp/>module<sp/>private<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../src/data_conversion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_1<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_2<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_3<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADC_4<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERROR_CHANNEL_OFF<sp/>-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERROR_CHANNEL_NOT_FOUND<sp/>-5000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>enum<sp/>:<sp/>uint8_t</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/>parameter_t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Device-tree<sp/>related<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SHIELD_TWIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_TOKEN(node_id)<sp/>DT_STRING_TOKEN(node_id,<sp/>channel_name),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Type<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SHIELD_TWIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDEFINED_CHANNEL<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>DT_FOREACH_STATUS_OKAY(adc_channels,<sp/>CHANNEL_TOKEN)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/>channel_t;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>DispatchMethod_t</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>on_dma_interrupt,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>externally_triggered</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constants<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ADC_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>CHANNELS_PER_ADC<sp/>=<sp/>19;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>&quot;no<sp/>value&quot;<sp/>as<sp/>an<sp/>impossible,<sp/>out<sp/>of<sp/>range<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>NO_VALUE<sp/>=<sp/>-10000;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>DATA_IS_OK<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>DATA_IS_OLD<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>DATA_IS_MISSING<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>class<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classDataAPI" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDataAPI" kindref="compound">DataAPI</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_SHIELD_TWIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1a24d81465b3c408f5522c12c94423d074" kindref="member">enableShieldChannel</ref>(uint8_t<sp/>adc_num,<sp/>channel_t<sp/>channel_name);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1a9eeea7fbd0c0447a3a9da20b381bc855" kindref="member">enableTwistDefaultChannels</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/><ref refid="classDataAPI_1a1cd2d1dc2e78f05cbeb3b2e91e5b4e39" kindref="member">getRawValues</ref>(channel_t<sp/>channel,<sp/>uint32_t&amp;<sp/>number_of_values_acquired);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a4c384884b21d4bac9ef5e1d2c90a5b9a" kindref="member">peek</ref>(channel_t<sp/>channel);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a25fdfec31e1ff0f57dd9efd269a896e3" kindref="member">getLatest</ref>(channel_t<sp/>channel,<sp/>uint8_t*<sp/>dataValid<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a4e86c7e940a187d04c88b96aafb78bf3" kindref="member">convert</ref>(channel_t<sp/>channel,<sp/>uint16_t<sp/>raw_value);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1a26f5b94ff35f8263153bbb92a14a6682" kindref="member">setParameters</ref>(channel_t<sp/>channel,<sp/>float32_t<sp/>gain,<sp/>float32_t<sp/>offset);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1aef69385146e128a353b0f88618464339" kindref="member">retrieveStoredParameterValue</ref>(channel_t<sp/>channel,<sp/>parameter_t<sp/>parameter_name);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>conversion_type_t<sp/><ref refid="classDataAPI_1a8bddef1811f64e5ad2d2256c8e1febae" kindref="member">retrieveStoredConversionType</ref>(channel_t<sp/>channel);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1ab21994d514ab12bc445145db9c2bc415" kindref="member">storeParametersInMemory</ref>(channel_t<sp/>channel);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1a83894ad35bb7fee56cde2c4cf9de424c" kindref="member">retrieveParametersFromMemory</ref>(channel_t<sp/>channel);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1a4f873db07dbf3cb714bcf8e98dd69867" kindref="member">setTwistChannelsUserCalibrationFactors</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1afa13db051b8efed2cab77c02e8d201ea" kindref="member">enableAcquisition</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1a4656e02f0227660869d5167f456fedfe" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1aa0acfd495a05173afa4c8061c9b0a897" kindref="member">started</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1abb9623a77e9c1924413f39488814e8b8" kindref="member">setDispatchMethod</ref>(DispatchMethod_t<sp/>dispatch_method);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>DispatchMethod_t<sp/><ref refid="classDataAPI_1a1a359db888adafb5015c0f1fd338defe" kindref="member">getDispatchMethod</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1aa73130020e80ffb99f43201e317a53eb" kindref="member">setRepetitionsBetweenDispatches</ref>(uint32_t<sp/>repetition);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1a091a1f05f90753af26f6a4eebf9329d4" kindref="member">triggerAcquisition</ref>(uint8_t<sp/>adc_num);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessor<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/><ref refid="classDataAPI_1a1cd2d1dc2e78f05cbeb3b2e91e5b4e39" kindref="member">getRawValues</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num,<sp/>uint32_t&amp;<sp/>number_of_values_acquired);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a4c384884b21d4bac9ef5e1d2c90a5b9a" kindref="member">peek</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a25fdfec31e1ff0f57dd9efd269a896e3" kindref="member">getLatest</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num,<sp/>uint8_t*<sp/>dataValid<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1a4e86c7e940a187d04c88b96aafb78bf3" kindref="member">convert</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num,<sp/>uint16_t<sp/>raw_value);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataAPI_1a26f5b94ff35f8263153bbb92a14a6682" kindref="member">setParameters</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num,<sp/>float32_t<sp/>gain,<sp/>float32_t<sp/>offset);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/><ref refid="classDataAPI_1aef69385146e128a353b0f88618464339" kindref="member">retrieveStoredParameterValue</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num,<sp/>parameter_t<sp/>parameter_name);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>conversion_type_t<sp/><ref refid="classDataAPI_1a8bddef1811f64e5ad2d2256c8e1febae" kindref="member">retrieveStoredConversionType</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1ab21994d514ab12bc445145db9c2bc415" kindref="member">storeParametersInMemory</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classDataAPI_1a83894ad35bb7fee56cde2c4cf9de424c" kindref="member">retrieveParametersFromMemory</ref>(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>pin_num);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>enableChannel(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>channel_num);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/>getChannelRawValues(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>channel_num,<sp/>uint32_t&amp;<sp/>number_of_values_acquired);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>peekChannel(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>channel_num);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>float32_t<sp/>getChannelLatest(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>channel_num,<sp/>uint8_t*<sp/>dataValid<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>getChannelRank(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>channel_num);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>getChannelNumber(uint8_t<sp/>adc_num,<sp/>uint8_t<sp/>twist_pin);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_started<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>channels_ranks[ADC_COUNT][CHANNELS_PER_ADC]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_rank[ADC_COUNT]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>DispatchMethod_t<sp/>dispatch_method<sp/>=<sp/>DispatchMethod_t::on_dma_interrupt;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>repetition_count_between_dispatches<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">};</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>object<sp/>to<sp/>interact<sp/>with<sp/>the<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classDataAPI" kindref="compound">DataAPI</ref><sp/>data;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>DATAAPI_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="docs/core/zephyr/modules/owntech_data_api/zephyr/public_api/DataAPI.h"/>
  </compounddef>
</doxygen>
