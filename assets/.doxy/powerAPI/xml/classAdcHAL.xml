<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classAdcHAL" kind="class" language="C++" prot="public">
    <compoundname>AdcHAL</compoundname>
    <includes refid="AdcHAL_8h" local="no">AdcHAL.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classAdcHAL_1a437bc03246eb518612df49a3a2a29f32" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool AdcHAL::adcInitialized</definition>
        <argsstring></argsstring>
        <name>adcInitialized</name>
        <qualifiedname>AdcHAL::adcInitialized</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>2023</para>
</simplesect>
<simplesect kind="author"><para>Cl√©ment Foucher <ulink url="mailto:clement.foucher@laas.fr">clement.foucher@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Luiz Villa <ulink url="mailto:luiz.villa@laas.fr">luiz.villa@laas.fr</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="156" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" bodystart="156" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classAdcHAL_1aa7de85e3580ce723c15193b0f31c9b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::configureTriggerSource</definition>
        <argsstring>(uint8_t adc_number, adc_ev_src_t trigger_source)</argsstring>
        <name>configureTriggerSource</name>
        <qualifiedname>AdcHAL::configureTriggerSource</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>adc_ev_src_t</type>
          <declname>trigger_source</declname>
        </param>
        <briefdescription>
<para>Change the trigger source of an ADC. By default, triggger source for ADC 1/2 is on HRTIM1, and ADC 3/4 is software-triggered. </para>
        </briefdescription>
        <detaileddescription>
<para>Applied configuration will only be set when ADC is started. If ADC is already started, it must be stopped then started again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigger_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source of the trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="61" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a6684308afba3dd4be09e65cf1bbac4f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::configureDiscontinuousMode</definition>
        <argsstring>(uint8_t adc_number, uint32_t dicontinuous_count)</argsstring>
        <name>configureDiscontinuousMode</name>
        <qualifiedname>AdcHAL::configureDiscontinuousMode</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dicontinuous_count</declname>
        </param>
        <briefdescription>
<para>Set the discontinuous count for an ADC. By default, ADCs are not in discontinuous mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Applied configuration will only be set when ADC is started. If ADC is already started, it must be stopped then started again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discontinuous_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels to acquire on each trigger event. 0 to disable discontinuous mode (default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="74" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="69" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a23feb9b1e0a8f35448f60848dd8282d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::enableDma</definition>
        <argsstring>(uint8_t adc_number, bool use_dma)</argsstring>
        <name>enableDma</name>
        <qualifiedname>AdcHAL::enableDma</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_dma</declname>
        </param>
        <briefdescription>
<para>ADC DMA mode configuration. Enables DMA and circular mode on an ADC. </para>
        </briefdescription>
        <detaileddescription>
<para>Applied configuration will only be set when ADC is started. If ADC is already started, it must be stopped then started again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC on which to enable DMA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_dma</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to true to use DMA for this ADC, false to not use it (default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="87" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1abeef1ddbfae46e2ab8f474b2dff02b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::enableChannel</definition>
        <argsstring>(uint8_t adc_number, uint8_t channel)</argsstring>
        <name>enableChannel</name>
        <qualifiedname>AdcHAL::enableChannel</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Add a channel to the list of channels to be acquired for an ADC. The order in which channels are acquired is determined by the order in which they are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>Applied configuration will only be set when ADC is started. If ADC is already started, it must be stopped then started again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the channel to to be acquired. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="101" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="85" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a73871e94afa659d4284cd10ed9140fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::disableChannel</definition>
        <argsstring>(uint8_t adc_number, uint8_t channel)</argsstring>
        <name>disableChannel</name>
        <qualifiedname>AdcHAL::disableChannel</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Removes a channel from the list of channels that are acquired by an ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If a channel has been enabled multiple times, then only the first occurence in the list will be removed.</para>
</simplesect>
Applied configuration will only be set when ADC is started. If ADC is already started, it must be stopped then started again.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the channel to to no longer be acquired. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="116" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a485af7cc258540d798cf130c816bc4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t AdcHAL::getEnabledChannelsCount</definition>
        <argsstring>(uint8_t adc_number)</argsstring>
        <name>getEnabledChannelsCount</name>
        <qualifiedname>AdcHAL::getEnabledChannelsCount</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <briefdescription>
<para>Returns the number of enabled channels for an ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to fetch. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of enabled channels on the given ADC. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="124" column="10" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="117" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a07f191a65b063a8b0bab3e8f4769c5cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::triggerSoftwareConversion</definition>
        <argsstring>(uint8_t adc_number, uint8_t number_of_acquisitions)</argsstring>
        <name>triggerSoftwareConversion</name>
        <qualifiedname>AdcHAL::triggerSoftwareConversion</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>number_of_acquisitions</declname>
        </param>
        <briefdescription>
<para>Triggers a conversion on an ADC which is configured as software triggered. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Software trigger is default for all ADCs unless configured differently by the user or another module.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to fetch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number_of_acquisitions</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels to acquire. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="137" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="181" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1a5eea748f5f21aaa772f2c85cb5b68e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::startAllAdcs</definition>
        <argsstring>()</argsstring>
        <name>startAllAdcs</name>
        <qualifiedname>AdcHAL::startAllAdcs</qualifiedname>
        <briefdescription>
<para>Start all configured ADCs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="142" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="149" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classAdcHAL_1adad3ae1ff232896f7690c0d500d25787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::stopAllAdcs</definition>
        <argsstring>()</argsstring>
        <name>stopAllAdcs</name>
        <qualifiedname>AdcHAL::stopAllAdcs</qualifiedname>
        <briefdescription>
<para>Stop all configured ADCs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="147" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="165" bodyend="179"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classAdcHAL_1ae8f746eb8cd11d7346b0d54399aa7425" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdcHAL::initializeAllAdcs</definition>
        <argsstring>()</argsstring>
        <name>initializeAllAdcs</name>
        <qualifiedname>AdcHAL::initializeAllAdcs</qualifiedname>
        <briefdescription>
<para>Initialize all the adcs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="154" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.cpp" bodystart="38" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Handles the ADC for the spin board. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Use this element to call functions linked to the ADC for the SPIN board </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" line="46" column="1" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/AdcHAL.h" bodystart="47" bodyend="159"/>
    <listofallmembers>
      <member refid="classAdcHAL_1a437bc03246eb518612df49a3a2a29f32" prot="private" virt="non-virtual"><scope>AdcHAL</scope><name>adcInitialized</name></member>
      <member refid="classAdcHAL_1a6684308afba3dd4be09e65cf1bbac4f1" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>configureDiscontinuousMode</name></member>
      <member refid="classAdcHAL_1aa7de85e3580ce723c15193b0f31c9b20" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>configureTriggerSource</name></member>
      <member refid="classAdcHAL_1a73871e94afa659d4284cd10ed9140fd9" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>disableChannel</name></member>
      <member refid="classAdcHAL_1abeef1ddbfae46e2ab8f474b2dff02b48" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>enableChannel</name></member>
      <member refid="classAdcHAL_1a23feb9b1e0a8f35448f60848dd8282d8" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>enableDma</name></member>
      <member refid="classAdcHAL_1a485af7cc258540d798cf130c816bc4a8" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>getEnabledChannelsCount</name></member>
      <member refid="classAdcHAL_1ae8f746eb8cd11d7346b0d54399aa7425" prot="private" virt="non-virtual"><scope>AdcHAL</scope><name>initializeAllAdcs</name></member>
      <member refid="classAdcHAL_1a5eea748f5f21aaa772f2c85cb5b68e2d" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>startAllAdcs</name></member>
      <member refid="classAdcHAL_1adad3ae1ff232896f7690c0d500d25787" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>stopAllAdcs</name></member>
      <member refid="classAdcHAL_1a07f191a65b063a8b0bab3e8f4769c5cd" prot="public" virt="non-virtual"><scope>AdcHAL</scope><name>triggerSoftwareConversion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
