name: Brew OwnTech Documentation Center
on:
  repository_dispatch:
    types: [trigger-workflow]

permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name from repository_dispatch event
        if: ${{ github.event_name == 'repository_dispatch' }}
        run: |
          branch_name="${{ github.event.client_payload.version }}"
          echo "Triggered by branch: $branch_name"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all commits/branches, fixes fast forward issue of mike tool

      - name: Checkout OwnTech Core repo
        if: ${{ github.event.client_payload.version == 'v0.9.0' }}
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/Core
          ref: v0.9.0
          path: docs/core

      - name: Checkout OwnTech Core repo
        if: ${{ github.event.client_payload.version == 'v1.0' }}
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/Core
          ref: v1.0
          path: docs/core

      - name: Checkout OwnTech Bootloader repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/bootloader
          ref: docs
          path: docs/bootloader
          sparse-checkout: |
            docs/getting_started.md
            docs/images/*
          sparse-checkout-cone-mode: false

      - name: Checkout OwnTech Control library repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/control_library
          ref: docs
          path: docs/controlLibrary

      - name: Checkout OwnTech Examples repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/examples
          ref: docs
          path: docs/examples

      # - name: Checkout OwnTech Twist repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: owntech-foundation/TWIST
      #     ref: draft-doc-1.4
      #     path: docs/twist
      #     sparse-checkout: |
      #       docs

      - name: Checkout OwnTech Matlab repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/Owntech-Matlab
          path: docs/Matlab
          sparse-checkout: |
            docs

      - name: Checkout OwnTech OwnModels repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/OwnModels
          path: docs/OwnModels
          sparse-checkout: |
            docs

      - name: Checkout OwnTech OwnPlot repo
        uses: actions/checkout@v4
        with:
          repository: owntech-foundation/OwnPlot
          ref: doc_v1.6.0_2
          path: docs/OwnPlot
          sparse-checkout: |
            docs

      - uses: ssciwr/doxygen-install@v1
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v3
        with:
          key: ${{ github.ref }}
          path: .cache
      - name: Install python packages
        run: pip install mkdocs-material mkdoxy pillow cairosvg mkdocs-macros-plugin mkdocs-drawio mike
      - name: Upgrade Jinja2
        run: pip install Jinja2 --upgrade

      - name: Configure navigation menu for version 0.9
        if: ${{ github.event.client_payload.version == 'v0.9.0' }}
        run: |
          rm $GITHUB_WORKSPACE/mkdocs.yml
          cp $GITHUB_WORKSPACE/version-specific-yaml/mkdocs_0.9.yml $GITHUB_WORKSPACE/mkdocs.yml
      - name: Configure navigation menu for version 1.0
        if: ${{ github.event.client_payload.version == 'v1.0' }}
        run: |
          rm $GITHUB_WORKSPACE/mkdocs.yml
          cp $GITHUB_WORKSPACE/version-specific-yaml/mkdocs_1.0.yml $GITHUB_WORKSPACE/mkdocs.yml

      - name: Print mkdocs version
        run: mkdocs --version
      - name: Make sure git user.name is configured because it is used by mike versioning tool.
        run: git config --global user.name "${{github.actor}}"
      - name: Make sure git user.email is configured
        run: git config --global user.email "${{github.actor}}@users.noreply.github.com"
      #- name: Clear all docs versions (do not uncomment except if you know what u'r doing)
      #  run: mike delete --all
      - name: Publish docs for v0.9.0 using mike versioning tool
        if: ${{ github.event.client_payload.version == 'v0.9.0' }}
        run: mike deploy --push --update-aliases 0.9.0
      - name: Publish docs for v1.0.0 using mike versioning tool
        if: ${{ github.event.client_payload.version == 'v1.0' }}
        run: mike deploy --push --update-aliases 1.0.0
