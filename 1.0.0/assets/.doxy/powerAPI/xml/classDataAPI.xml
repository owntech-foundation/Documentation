<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classDataAPI" kind="class" language="C++" prot="public">
    <compoundname>DataAPI</compoundname>
    <includes refid="DataAPI_8h" local="no">DataAPI.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classDataAPI_1a021a5ce881f972ca8085a6947796c454" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SensorsAPI</definition>
        <argsstring></argsstring>
        <name>SensorsAPI</name>
        <qualifiedname>DataAPI::SensorsAPI</qualifiedname>
        <param>
          <type><ref refid="classSensorsAPI" kindref="compound">SensorsAPI</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="105" column="14" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classDataAPI_1aaf0811e412708fc111d5c121f97cd9c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_task_proxy</definition>
        <argsstring>()</argsstring>
        <name>user_task_proxy</name>
        <qualifiedname>DataAPI::user_task_proxy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="106" column="13"/>
      </memberdef>
      <memberdef kind="friend" id="classDataAPI_1a3a4c04db9ff8cba7f3b4606264d63177" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scheduling_start_uninterruptible_synchronous_task</definition>
        <argsstring>(bool)</argsstring>
        <name>scheduling_start_uninterruptible_synchronous_task</name>
        <qualifiedname>DataAPI::scheduling_start_uninterruptible_synchronous_task</qualifiedname>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="107" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classDataAPI_1a5b698fe4690fb8fbf33477e8b2d247a4" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool DataAPI::is_started</definition>
        <argsstring></argsstring>
        <name>is_started</name>
        <qualifiedname>DataAPI::is_started</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static class members </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="722" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1acd293f6108985afa29d7ebbc5a968124" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool DataAPI::adcInitialized</definition>
        <argsstring></argsstring>
        <name>adcInitialized</name>
        <qualifiedname>DataAPI::adcInitialized</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="723" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1a0a1fc6398661eddab3c662cb75292a65" prot="private" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t DataAPI::channels_ranks</definition>
        <argsstring>[ADC_COUNT][CHANNELS_PER_ADC]</argsstring>
        <name>channels_ranks</name>
        <qualifiedname>DataAPI::channels_ranks</qualifiedname>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="724" column="16" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1aa0c1000fc5ea7ae9a92e18878bbc7906" prot="private" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t DataAPI::current_rank</definition>
        <argsstring>[ADC_COUNT]</argsstring>
        <name>current_rank</name>
        <qualifiedname>DataAPI::current_rank</qualifiedname>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="725" column="16" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1ae19ede93eb2655a763eeaf83ea0420a4" prot="private" static="yes" mutable="no">
        <type>DispatchMethod_t</type>
        <definition>DispatchMethod_t DataAPI::dispatch_method</definition>
        <argsstring></argsstring>
        <name>dispatch_method</name>
        <qualifiedname>DataAPI::dispatch_method</qualifiedname>
        <initializer>= DispatchMethod_t::on_dma_interrupt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="726" column="25" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1a0d949a03948434ebfbfa3c7f5de23412" prot="private" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t DataAPI::repetition_count_between_dispatches</definition>
        <argsstring></argsstring>
        <name>repetition_count_between_dispatches</name>
        <qualifiedname>DataAPI::repetition_count_between_dispatches</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="727" column="17" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1a70ac94ae0b2ea1f35afdcc236d1b7214" prot="private" static="yes" mutable="no">
        <type>adc_t</type>
        <definition>adc_t DataAPI::current_adc</definition>
        <argsstring>[PIN_COUNT]</argsstring>
        <name>current_adc</name>
        <qualifiedname>DataAPI::current_adc</qualifiedname>
        <initializer>= {DEFAULT_ADC}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="728" column="14" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="variable" id="classDataAPI_1acd0b5c25cdf42a94a60811e2fead798b" prot="private" static="yes" mutable="no">
        <type>float32_t ***</type>
        <definition>float32_t *** DataAPI::converted_values_buffer</definition>
        <argsstring></argsstring>
        <name>converted_values_buffer</name>
        <qualifiedname>DataAPI::converted_values_buffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="729" column="18" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="729" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classDataAPI_1a2cb56a6f6f652e2ad9216d52bafb9c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::enableAcquisition</definition>
        <argsstring>(uint8_t pin_number, adc_t adc_number=DEFAULT_ADC)</argsstring>
        <name>enableAcquisition</name>
        <qualifiedname>DataAPI::enableAcquisition</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
          <defname>pin_num</defname>
        </param>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
          <defname>adc_num</defname>
          <defval>DEFAULT_ADC</defval>
        </param>
        <briefdescription>
<para>This function is used to enable acquisition on a Spin PIN with a given ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Not any pin can be used for acquisition: the pin must be linked to a channel of the given ADC. Refer to Spin pinout image for PIN/ADC relations.</para>
</simplesect>
<simplesect kind="note"><para>This function must be called <emphasis>before</emphasis> Data API is started.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the Spin pin on which to enable acquisition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC on which acquisition is to be done. <linebreak/>
 This parameter can be omitted, in which case:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>If only one ADC is linked to the given pin, it will be selected.</para>
</listitem><listitem><para>If two ADCs are available for acquisition on the given pin, the ADC with the lowest number will be selected.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para><computeroutput>0</computeroutput> if acquisition was correctly enabled, <computeroutput>-1</computeroutput> if there was an error.</para>
</simplesect>
Errors generally indicate that the given pin is not linked to and ADC, and thus can not be used for acquisition.</para>
<para>If the adc_number parameter was explicitly provided, it can also indicate that the given ADC is not available for acquisition on the provided pin.</para>
<para>Public functions accessible only when using a power shield </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="141" column="8" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="63" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a4656e02f0227660869d5167f456fedfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>DataAPI::start</qualifiedname>
        <briefdescription>
<para>This functions manually starts the acquisition chain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If your code uses an uninterruptible task, you do not need to start Data Acquisition manually:</para>
</simplesect>
It will instead start automatically at the same time as the task as their internal behavior is intrinsically linked.</para>
<para>If, for some reason, you have an uninterruptible task in your code, but do not want the Scheduling module to be in charge of Data Acquisition, you need to indicate it when starting the uninterruptible task.</para>
<para>In that case, Data Acquisition must be manually started using this function.</para>
<para>Note that in that case, dispatch will use DMA interrupts which consumes a non-negligible amount of processor time and it is not advised.</para>
<para><simplesect kind="note"><para>Data Acquisition must be started only after ADC module configuration has been fully carried out.</para>
</simplesect>
No ADC configuration change is allowed after module has been started.</para>
<para>If you&apos;re using a power shield and are not sure how to initialize ADCs, you can use data.enableShieldDefaultChannels() for that purpose.</para>
<para><simplesect kind="note"><para>Data Acquisition must be started before accessing any data.get*() or data.peek*() function.</para>
</simplesect>
Other Data Acquisition functions are safe to use before starting the module.</para>
<para><simplesect kind="return"><para><computeroutput>0</computeroutput> if everything went well, <computeroutput>-1</computeroutput> if there was an error Error is triggered when dispatch method is set to be external, but the repetition value has not provided.</para>
</simplesect>
Another source of error is trying to start Data Acquisition after it has already been started. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="188" column="8" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="90" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1aa0acfd495a05173afa4c8061c9b0a897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataAPI::started</definition>
        <argsstring>()</argsstring>
        <name>started</name>
        <qualifiedname>DataAPI::started</qualifiedname>
        <briefdescription>
<para>Checks if the module is already started. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   For auto-spawning threads, this allows to make sure the module
   has already been started before trying to access measurements.

   If you do NOT use (or do NOT know what are) auto-spawning threads:

      - just make sure calls to any `data.get*()` or `data.peek*()`
   function occur after the uninterruptible task is started, 

      - or `Data Acquisition is manually started, and ignore this function.
</verbatim></para>
<para><simplesect kind="return"><para>true is the module has been started, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="205" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a28c7936314d9a4b152b3ca0807284392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>DataAPI::stop</qualifiedname>
        <briefdescription>
<para>Stops the module if it is started. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>0</computeroutput> if everything went well, <computeroutput>-1</computeroutput> if there was an error. <verbatim>       Error is triggered when trying to stop Data API while it was not 
       started.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="215" column="8" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="132" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1aa86c01fa8971c1a5e1f16a5c82065fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::triggerAcquisition</definition>
        <argsstring>(adc_t adc_number)</argsstring>
        <name>triggerAcquisition</name>
        <qualifiedname>DataAPI::triggerAcquisition</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <briefdescription>
<para>Triggers an acquisition on a given ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>      Each channel configured on this ADC will be acquired one after 
      the other until all configured channels have been acquired.
</verbatim></para>
<para><simplesect kind="note"><para>This function can NOT be called before: <verbatim>      - at least one channel is enabled on the ADC

      - AND the DataAPI module is started, (either explicitly or by 
        starting the Uninterruptible task.)
</verbatim></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC on which to acquire channels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="232" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1af8de8f2ec899d5b11956964e92ee16dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t *</type>
        <definition>uint16_t * DataAPI::getRawValues</definition>
        <argsstring>(uint8_t pin_number, uint32_t &amp;number_of_values_acquired)</argsstring>
        <name>getRawValues</name>
        <qualifiedname>DataAPI::getRawValues</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>number_of_values_acquired</declname>
        </param>
        <briefdescription>
<para>Function to access the acquired data for specified pin. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This function provides a buffer in which all data that
   have been acquired since last call are stored. 
</verbatim></para>
<para><simplesect kind="note"><para>The count of these values is returned as an output parameter. <verbatim>      The user has to define a variable and pass it as the parameter
   of the function. 

      The variable will be updated with the number of values that are 
      available in the buffer.
</verbatim></para>
</simplesect>
<simplesect kind="note"><para>This function can NOT be called before the pin is enabled. <verbatim>   The DataAPI module must have been started, either
   explicitly or by starting the Uninterruptible task.
</verbatim></para>
</simplesect>
<simplesect kind="note"><para>When calling this function, it invalidates the buffer returned by a previous call to the same function.</para>
</simplesect>
However, different channels buffers are independent from each other.</para>
<para><simplesect kind="note"><para>When using this functions, the user is responsible for data conversion. Use data.convertValue() function for this purpose.</para>
</simplesect>
<simplesect kind="note"><para>When using this function, DO NOT use the function to get the latest converted value for the same channel as this function will clear the buffer and disregard all values but the latest.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number_of_values_acquired</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass an uint32_t variable. This variable will be updated with the number of values that are present in the returned buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a buffer in which the acquired values are stored. <verbatim>    If number_of_values_acquired is `0`, do not try to access the
    buffer as it may be nullptr.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="276" column="10" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="178" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1aed44259775058a42eccd5603a4137d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t *</type>
        <definition>float32_t * DataAPI::getValues</definition>
        <argsstring>(uint8_t pin_number, uint32_t &amp;number_of_values_acquired)</argsstring>
        <name>getValues</name>
        <qualifiedname>DataAPI::getValues</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>number_of_values_acquired</declname>
        </param>
        <briefdescription>
<para>Function to access the acquired data for specified pin. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This function converts all values that have been acquired
   since last call are stored and provide an array containing
   all of them. 

      The count of these values is returned as an
   output parameter. 

      The user has to define a variable and pass it as the parameter of 
      the function.

      The variable will be updated with the number of values that are 
      available in the buffer.
</verbatim></para>
<para><simplesect kind="warning"><para>This is an expensive function. <verbatim>        Calling this function trigger the conversion of all values 
        acquired since the last call.

     If only the latest value is required, it is advised to call
     getLatestValue() instead. 

        If multiple values are required, but not all, it is advised to 
        call getRawValues() instead, then explicitly convert required 
        values using convertValue().
</verbatim></para>
</simplesect>
<simplesect kind="note"><para>This function can NOT be called before the pin is enabled. <verbatim>   The DataAPI module must have been started, either
   explicitly or by starting the Uninterruptible task.
</verbatim></para>
</simplesect>
<simplesect kind="note"><para>When calling this function, it invalidates the array returned by a previous call to the same function.</para>
</simplesect>
However, different channels buffers are independent from each other.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number_of_values_acquired</parametername>
</parameternamelist>
<parameterdescription>
<para>Pass an uint32_t variable. This variable will be updated with the number of values that are present in the returned buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to an array in which the acquired values are stored. <verbatim>    If number_of_values_acquired is 0, do not try to access the
    buffer as it may be nullptr.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="328" column="11" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="200" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a71c77e8ada7b064600e89a1e1a827ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::peekLatestValue</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>peekLatestValue</name>
        <qualifiedname>DataAPI::peekLatestValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Function to access the latest value available from a pin. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>      Values are expressed in the relevant unit for the data 
      (Volts, Amperes, or Degree Celsius). 

      This function will not touch anything in the buffer, and thus can 
      be called safely at any time after the module has been started.
</verbatim></para>
<para><simplesect kind="note"><para>This function can NOT be called before the pin is enabled. <verbatim>   The DataAPI module must have been started, either
   explicitly or by starting the Uninterruptible task.
</verbatim></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest available value available from the given channel. <verbatim>       If there was no value acquired in this channel yet,
    return value is NO_VALUE.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="352" column="11" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="222" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1aaf284cff0d07af90e2bf5ca6832e4af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::getLatestValue</definition>
        <argsstring>(uint8_t pin_number, uint8_t *dataValid=nullptr)</argsstring>
        <name>getLatestValue</name>
        <qualifiedname>DataAPI::getLatestValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dataValid</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This function returns the latest acquired measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>      Values are expressed in the relevant unit for the channel 
      (Volts, Amperes, or Degree Celsius).
</verbatim></para>
<para><simplesect kind="note"><para>This function can NOT be called before the pin is enabled. <verbatim>   The DataAPI module must have been started, either
   explicitly or by starting the Uninterruptible task.
</verbatim></para>
</simplesect>
<simplesect kind="note"><para>When using this functions, you loose the ability to access raw values using data.getRawValues() function for the matching channel, as data.getLatestValue() function clears the buffer on each call.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataValid</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an uint8_t variable. <verbatim>      This parameter is facultative. 

      If this parameter is provided, it will be updated
   to indicate information about data. 

      Possible values for this parameter will be:

   - `DATA_IS_OK` if returned data is a newly acquired data,

   - `DATA_IS_OLD` if returned data has already been provided before
   (no new data available since latest time this function was called),

   - `DATA_IS_MISSING` if returned data is NO_VALUE.
</verbatim></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest acquired measure for the channel. <verbatim>    If no value was acquired in this channel yet, return value is NO_VALUE.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="392" column="11" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="239" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a5d2310e005017f6a5a76786cf6012b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::convertValue</definition>
        <argsstring>(uint8_t pin_number, uint16_t raw_value)</argsstring>
        <name>convertValue</name>
        <qualifiedname>DataAPI::convertValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>raw_value</declname>
        </param>
        <briefdescription>
<para>Use this function to convert values obtained using matching data.getRawValues() function to relevant unit for the data (Volts, Amperes, or Degree Celsius). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can NOT be called before the pin is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">raw_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw value obtained from the channel buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted value in the relevant unit. <verbatim>       If there is an error, returns `-5000`.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="408" column="11" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="264" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a55bc18d5cbcb646fa0dca4cad6d83d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::setConversionParametersLinear</definition>
        <argsstring>(uint8_t pin_number, float32_t gain, float32_t offset)</argsstring>
        <name>setConversionParametersLinear</name>
        <qualifiedname>DataAPI::setConversionParametersLinear</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>gain</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Use this function to tweak the conversion values for the channel if default values are not accurate enough. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can NOT be called before the pin is enabled. <verbatim>   The DataAPI module must not have been started, neither
   explicitly nor by starting the Uninterruptible task.
</verbatim></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain</parametername>
</parameternamelist>
<parameterdescription>
<para>Gain to be applied (multiplied) to the channel raw value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to be applied (added) to the channel value after gain has been applied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="424" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="281" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a8400bb28ffd38fea3edac8963bc59a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::setConversionParametersNtcThermistor</definition>
        <argsstring>(uint8_t pin_num, float32_t r0, float32_t b, float32_t rdiv, float32_t t0)</argsstring>
        <name>setConversionParametersNtcThermistor</name>
        <qualifiedname>DataAPI::setConversionParametersNtcThermistor</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_num</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>r0</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>rdiv</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>t0</declname>
        </param>
        <briefdescription>
<para>Use this function to set the conversion values for any NTC thermistor sensor if default values are not accurate enough. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can NOT be called before the sensor is enabled. The <ref refid="classDataAPI" kindref="compound">DataAPI</ref> must not have been started, neither explicitly nor by starting the Uninterruptible task.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r0</parametername>
</parameternamelist>
<parameterdescription>
<para>The NTC resistance at a reference temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensibility coefficient of the resistance to temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>The bridge divider resistance used to condition the NTC. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t0</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference temperature of the thermistor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="442" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="303" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a5d5fed98f96043bf30ade4b0004a9596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::getConversionParameterValue</definition>
        <argsstring>(uint8_t pin_number, parameter_t parameter_name)</argsstring>
        <name>getConversionParameterValue</name>
        <qualifiedname>DataAPI::getConversionParameterValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <param>
          <type>parameter_t</type>
          <declname>parameter_name</declname>
        </param>
        <briefdescription>
<para>Use this function to get the current conversion parameters for the chosen channel . </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can NOT be called before the channel is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameter_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Paramater to be retrieved: <computeroutput>gain</computeroutput> or <computeroutput>offset</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the value of the parameter. <verbatim>       Returns `-5000` if the channel is not active.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="461" column="11" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="330" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a2d129bb41de793a9ba79e33cd7bf858f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>conversion_type_t</type>
        <definition>conversion_type_t DataAPI::getConversionParameterType</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>getConversionParameterType</name>
        <qualifiedname>DataAPI::getConversionParameterType</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Use this function to get the current conversion type for the chosen channel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can NOT be called before the channel is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pin from which to obtain values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the type of conversion of the given pin. <verbatim>       Returns `-5` if the channel is not active.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="476" column="19" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="348" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a6fa8b8d7d3235bff9beb4b567ed3a22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::storeConversionParametersInMemory</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>storeConversionParametersInMemory</name>
        <qualifiedname>DataAPI::storeConversionParametersInMemory</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Store the currently configured conversion parameters of a given channel in persistent memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>SPIN pin number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> if parameters were correctly stored, negative value if there was an error:</para>
</simplesect>
<itemizedlist>
<listitem><para><computeroutput>-1</computeroutput>: There was an error,</para>
</listitem><listitem><para><computeroutput>-5000</computeroutput>: pin not found. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="491" column="8" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="365" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a866cf1113a45f2a7b52421ac2fb72582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::retrieveConversionParametersFromMemory</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>retrieveConversionParametersFromMemory</name>
        <qualifiedname>DataAPI::retrieveConversionParametersFromMemory</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Retrieved previously configured conversion parameters from persistent memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>SPIN pin number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> if parameters were correctly retrieved, <linebreak/>
 negative value if there was an error:</para>
</simplesect>
<itemizedlist>
<listitem><para><computeroutput>-1</computeroutput>: persistent memory is empty</para>
</listitem><listitem><para><computeroutput>-2</computeroutput>: persistent memory contains data, but its version doesn&apos;t match current version</para>
</listitem><listitem><para><computeroutput>-3</computeroutput>: data in persistent memory is corrupted</para>
</listitem><listitem><para><computeroutput>-4</computeroutput>: persistent memory contains data, but not for the requested pin</para>
</listitem><listitem><para><computeroutput>-5000</computeroutput>: pin not found. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="513" column="8" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="383" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a6a538eeb36311f01d0d8545a0f0c3f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::configureDiscontinuousMode</definition>
        <argsstring>(adc_t adc_number, uint32_t dicontinuous_count)</argsstring>
        <name>configureDiscontinuousMode</name>
        <qualifiedname>DataAPI::configureDiscontinuousMode</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dicontinuous_count</declname>
        </param>
        <briefdescription>
<para>Set the discontinuous count for an ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   By default, ADCs are NOT in discontinuous mode.

   Applied configuration will only be set when ADC is started.
   If ADC is already started, it must be stopped then started again.
</verbatim></para>
<para><simplesect kind="note"><para>This is an advanced function that requires to understand the way the ADC work.</para>
</simplesect>
Only for use if you explicitly requires it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">discontinuous_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels to acquire on each trigger event. 0 to disable discontinuous mode (default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="532" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="401" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a145c0e66e99fbf0a9952e667e1317fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::configureTriggerSource</definition>
        <argsstring>(adc_t adc_number, trigger_source_t trigger_source)</argsstring>
        <name>configureTriggerSource</name>
        <qualifiedname>DataAPI::configureTriggerSource</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>trigger_source_t</type>
          <declname>trigger_source</declname>
        </param>
        <briefdescription>
<para>Change the trigger source of an ADC. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   By default, trigger sources are: 

     - `ADC_1` and `ADC_2` = `TRIG_PWM`     

  - `ADC_3`, `ADC_4` and `ADC_5` = `TRIG_SOFTWARE`.

   Applied configuration will only be set when ADC is started.

   If ADC is already started, it must be stopped then started again.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the ADC to configure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Source of the trigger </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Check parameters validity</para>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="551" column="6" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="414" bodyend="462"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classDataAPI_1a822cc100b16375e9ece808a5e73cac14" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::initializeAllAdcs</definition>
        <argsstring>()</argsstring>
        <name>initializeAllAdcs</name>
        <qualifiedname>DataAPI::initializeAllAdcs</qualifiedname>
        <briefdescription>
<para>Initialize all available ADC peripherals if not already initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>This function configures each ADC with a default software trigger source and sets the adcInitialized flag to true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="560" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="466" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a17250468115f01f7c6646d856ef63824" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t DataAPI::enableChannel</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num)</argsstring>
        <name>enableChannel</name>
        <qualifiedname>DataAPI::enableChannel</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <briefdescription>
<para>Enable a specific ADC channel for sampling and DMA. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds the channel to the ADC&apos;s active conversion list and tracks its rank.</para>
<para>ADC must not be started when enabling channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the ADC (1–5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC channel number to enable (1–N). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, <verbatim>       -1 if invalid ADC/channel or ADC already started.
</verbatim> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="575" column="15" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="481" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a622cd08c0d6e2dfd203fd1625c4a572d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::disableChannel</definition>
        <argsstring>(adc_t adc_number, uint8_t channel)</argsstring>
        <name>disableChannel</name>
        <qualifiedname>DataAPI::disableChannel</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Disable a previously enabled ADC channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Removes the channel from the conversion list of the given ADC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the ADC (1–5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to disable (1–N). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="585" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="516" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1ae2b5b30e95e12b8dfd1355c3f333e47a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t *</type>
        <definition>uint16_t * DataAPI::getChannelRawValues</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num, uint32_t &amp;number_of_values_acquired)</argsstring>
        <name>getChannelRawValues</name>
        <qualifiedname>DataAPI::getChannelRawValues</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>number_of_values_acquired</declname>
        </param>
        <briefdescription>
<para>Retrieve raw ADC conversion data for a specific channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the buffer of raw values and updates the sample count.</para>
<para>Returns nullptr if API is not started or the channel is invalid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index (1–5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number_of_values_acquired</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to output number of samples. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to raw ADC value buffer or nullptr on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="600" column="17" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="528" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1ab65ad2330b4d88cfdeedb4953adc006b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t *</type>
        <definition>float32_t * DataAPI::getChannelValues</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num, uint32_t &amp;number_of_values_acquired)</argsstring>
        <name>getChannelValues</name>
        <qualifiedname>DataAPI::getChannelValues</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>number_of_values_acquired</declname>
        </param>
        <briefdescription>
<para>Retrieve floating-point converted values for a specific ADC channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Allocates and fills a buffer of converted values from raw ADC data.</para>
<para>May initialize internal buffers as needed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index (1–5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number_of_values_acquired</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to output number of samples. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to converted float32_t values or nullptr on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="617" column="18" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="550" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a858c28b0348ceeddf5644b8ae2f391d6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::peekChannel</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num)</argsstring>
        <name>peekChannel</name>
        <qualifiedname>DataAPI::peekChannel</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <briefdescription>
<para>Peek at the latest value sampled for the specified channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the latest available floating-point value, without affecting internal state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index (1–5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted floating-point value, or NO_VALUE if unavailable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="631" column="18" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="612" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a6dda412bdb465bcf3af90c92ed334084" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float32_t</type>
        <definition>float32_t DataAPI::getChannelLatest</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num, uint8_t *dataValid=nullptr)</argsstring>
        <name>getChannelLatest</name>
        <qualifiedname>DataAPI::getChannelLatest</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dataValid</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Retrieve the latest sampled value for a channel and its validity status. </para>
        </briefdescription>
        <detaileddescription>
<para>If available, returns the most recent converted value.</para>
<para>Optionally updates a flag indicating if the data is fresh, old, or missing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataValid</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to validity flag (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest converted value or NO_VALUE. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="647" column="18" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="635" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a6988b0a34c4d0c8ed07390149c4017b5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t DataAPI::getChannelRank</definition>
        <argsstring>(adc_t adc_number, uint8_t channel_num)</argsstring>
        <name>getChannelRank</name>
        <qualifiedname>DataAPI::getChannelRank</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_num</declname>
        </param>
        <briefdescription>
<para>Get the conversion rank of a given ADC channel. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the rank used internally to track channel position in DMA acquisition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rank index (1–N) or 0 if not active. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="661" column="16" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="706" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a0685587c4707fa473d617c5d76c9851a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t DataAPI::getChannelNumber</definition>
        <argsstring>(adc_t adc_number, uint8_t shield_pin)</argsstring>
        <name>getChannelNumber</name>
        <qualifiedname>DataAPI::getChannelNumber</qualifiedname>
        <param>
          <type>adc_t</type>
          <declname>adc_number</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shield_pin</declname>
        </param>
        <briefdescription>
<para>Get the ADC channel number mapped to a specific shield pin. </para>
        </briefdescription>
        <detaileddescription>
<para>Converts a shield pin number to the corresponding ADC channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adc_number</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shield_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number on the OwnTech shield. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ADC channel number (1–N) or 0 if invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="672" column="16" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="717" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1af1778d91d3a60fa1b2fabbb2309d5f4e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>adc_t</type>
        <definition>adc_t DataAPI::getDefaultAdcForPin</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>getDefaultAdcForPin</name>
        <qualifiedname>DataAPI::getDefaultAdcForPin</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Return the default ADC assigned to a specific pin. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to choose the preferred ADC in case multiple are supported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Shield pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Default ADC enum (<computeroutput>ADC_1</computeroutput> to <computeroutput>ADC_5</computeroutput> or <computeroutput>UNKNOWN_ADC</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="682" column="14" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="875" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a6c9f265ac1228509939b821b0014dcc6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>adc_t</type>
        <definition>adc_t DataAPI::getCurrentAdcForPin</definition>
        <argsstring>(uint8_t pin_number)</argsstring>
        <name>getCurrentAdcForPin</name>
        <qualifiedname>DataAPI::getCurrentAdcForPin</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>pin_number</declname>
        </param>
        <briefdescription>
<para>Return the ADC currently assigned to a specific pin. </para>
        </briefdescription>
        <detaileddescription>
<para>May differ from default if overridden by user logic.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Shield pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current ADC assignment or UNKNOWN_ADC. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="692" column="14" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="925" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1aa73130020e80ffb99f43201e317a53eb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::setRepetitionsBetweenDispatches</definition>
        <argsstring>(uint32_t repetition)</argsstring>
        <name>setRepetitionsBetweenDispatches</name>
        <qualifiedname>DataAPI::setRepetitionsBetweenDispatches</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>repetition</declname>
        </param>
        <briefdescription>
<para>Set the number of scheduling repetitions between data dispatches. </para>
        </briefdescription>
        <detaileddescription>
<para>Used by the internal scheduler to control how often data is pushed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>repetition</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of repetitions between dispatches. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="703" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1abb9623a77e9c1924413f39488814e8b8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::setDispatchMethod</definition>
        <argsstring>(DispatchMethod_t dispatch_method)</argsstring>
        <name>setDispatchMethod</name>
        <qualifiedname>DataAPI::setDispatchMethod</qualifiedname>
        <param>
          <type>DispatchMethod_t</type>
          <declname>dispatch_method</declname>
        </param>
        <briefdescription>
<para>Set the dispatch method for data acquisition. </para>
        </briefdescription>
        <detaileddescription>
<para>Determines if data is triggered internally or externally.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispatch_method</parametername>
</parameternamelist>
<parameterdescription>
<para>Dispatch method enum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="712" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="classDataAPI_1a3bb778d3044d6f2c8b41b33ae07c48e5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAPI::doFullDispatch</definition>
        <argsstring>()</argsstring>
        <name>doFullDispatch</name>
        <qualifiedname>DataAPI::doFullDispatch</qualifiedname>
        <briefdescription>
<para>Force a full data dispatch cycle immediately. </para>
        </briefdescription>
        <detaileddescription>
<para>Pushes all currently acquired data through the dispatch mechanism. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="719" column="13" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.cpp" bodystart="950" bodyend="953"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Static class definition </para>
    </detaileddescription>
    <location file="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" line="102" column="1" bodyfile="docs/core/zephyr/modules/owntech_spin_api/zephyr/src/DataAPI.h" bodystart="103" bodyend="731"/>
    <listofallmembers>
      <member refid="classDataAPI_1acd293f6108985afa29d7ebbc5a968124" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>adcInitialized</name></member>
      <member refid="classDataAPI_1a0a1fc6398661eddab3c662cb75292a65" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>channels_ranks</name></member>
      <member refid="classDataAPI_1a6a538eeb36311f01d0d8545a0f0c3f58" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>configureDiscontinuousMode</name></member>
      <member refid="classDataAPI_1a145c0e66e99fbf0a9952e667e1317fbb" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>configureTriggerSource</name></member>
      <member refid="classDataAPI_1acd0b5c25cdf42a94a60811e2fead798b" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>converted_values_buffer</name></member>
      <member refid="classDataAPI_1a5d2310e005017f6a5a76786cf6012b80" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>convertValue</name></member>
      <member refid="classDataAPI_1a70ac94ae0b2ea1f35afdcc236d1b7214" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>current_adc</name></member>
      <member refid="classDataAPI_1aa0c1000fc5ea7ae9a92e18878bbc7906" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>current_rank</name></member>
      <member refid="classDataAPI_1a622cd08c0d6e2dfd203fd1625c4a572d" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>disableChannel</name></member>
      <member refid="classDataAPI_1ae19ede93eb2655a763eeaf83ea0420a4" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>dispatch_method</name></member>
      <member refid="classDataAPI_1a3bb778d3044d6f2c8b41b33ae07c48e5" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>doFullDispatch</name></member>
      <member refid="classDataAPI_1a2cb56a6f6f652e2ad9216d52bafb9c2a" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>enableAcquisition</name></member>
      <member refid="classDataAPI_1a17250468115f01f7c6646d856ef63824" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>enableChannel</name></member>
      <member refid="classDataAPI_1a6dda412bdb465bcf3af90c92ed334084" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getChannelLatest</name></member>
      <member refid="classDataAPI_1a0685587c4707fa473d617c5d76c9851a" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getChannelNumber</name></member>
      <member refid="classDataAPI_1a6988b0a34c4d0c8ed07390149c4017b5" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getChannelRank</name></member>
      <member refid="classDataAPI_1ae2b5b30e95e12b8dfd1355c3f333e47a" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getChannelRawValues</name></member>
      <member refid="classDataAPI_1ab65ad2330b4d88cfdeedb4953adc006b" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getChannelValues</name></member>
      <member refid="classDataAPI_1a2d129bb41de793a9ba79e33cd7bf858f" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>getConversionParameterType</name></member>
      <member refid="classDataAPI_1a5d5fed98f96043bf30ade4b0004a9596" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>getConversionParameterValue</name></member>
      <member refid="classDataAPI_1a6c9f265ac1228509939b821b0014dcc6" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getCurrentAdcForPin</name></member>
      <member refid="classDataAPI_1af1778d91d3a60fa1b2fabbb2309d5f4e" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>getDefaultAdcForPin</name></member>
      <member refid="classDataAPI_1aaf284cff0d07af90e2bf5ca6832e4af9" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>getLatestValue</name></member>
      <member refid="classDataAPI_1af8de8f2ec899d5b11956964e92ee16dc" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>getRawValues</name></member>
      <member refid="classDataAPI_1aed44259775058a42eccd5603a4137d81" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>getValues</name></member>
      <member refid="classDataAPI_1a822cc100b16375e9ece808a5e73cac14" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>initializeAllAdcs</name></member>
      <member refid="classDataAPI_1a5b698fe4690fb8fbf33477e8b2d247a4" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>is_started</name></member>
      <member refid="classDataAPI_1a858c28b0348ceeddf5644b8ae2f391d6" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>peekChannel</name></member>
      <member refid="classDataAPI_1a71c77e8ada7b064600e89a1e1a827ba4" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>peekLatestValue</name></member>
      <member refid="classDataAPI_1a0d949a03948434ebfbfa3c7f5de23412" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>repetition_count_between_dispatches</name></member>
      <member refid="classDataAPI_1a866cf1113a45f2a7b52421ac2fb72582" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>retrieveConversionParametersFromMemory</name></member>
      <member refid="classDataAPI_1a3a4c04db9ff8cba7f3b4606264d63177" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>scheduling_start_uninterruptible_synchronous_task</name></member>
      <member refid="classDataAPI_1a021a5ce881f972ca8085a6947796c454" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>SensorsAPI</name></member>
      <member refid="classDataAPI_1a55bc18d5cbcb646fa0dca4cad6d83d6c" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>setConversionParametersLinear</name></member>
      <member refid="classDataAPI_1a8400bb28ffd38fea3edac8963bc59a7a" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>setConversionParametersNtcThermistor</name></member>
      <member refid="classDataAPI_1abb9623a77e9c1924413f39488814e8b8" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>setDispatchMethod</name></member>
      <member refid="classDataAPI_1aa73130020e80ffb99f43201e317a53eb" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>setRepetitionsBetweenDispatches</name></member>
      <member refid="classDataAPI_1a4656e02f0227660869d5167f456fedfe" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>start</name></member>
      <member refid="classDataAPI_1aa0acfd495a05173afa4c8061c9b0a897" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>started</name></member>
      <member refid="classDataAPI_1a28c7936314d9a4b152b3ca0807284392" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>stop</name></member>
      <member refid="classDataAPI_1a6fa8b8d7d3235bff9beb4b567ed3a22d" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>storeConversionParametersInMemory</name></member>
      <member refid="classDataAPI_1aa86c01fa8971c1a5e1f16a5c82065fb8" prot="public" virt="non-virtual"><scope>DataAPI</scope><name>triggerAcquisition</name></member>
      <member refid="classDataAPI_1aaf0811e412708fc111d5c121f97cd9c5" prot="private" virt="non-virtual"><scope>DataAPI</scope><name>user_task_proxy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
