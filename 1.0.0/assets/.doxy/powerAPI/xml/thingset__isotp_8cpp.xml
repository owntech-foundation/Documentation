<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="thingset__isotp_8cpp" kind="file" language="C++">
    <compoundname>thingset_isotp.cpp</compoundname>
    <sectiondef kind="var">
      <memberdef kind="variable" id="thingset__isotp_8cpp_1a8e52c22ac650fcc01ad5c7d69c53d2ae" prot="public" static="no" extern="yes" mutable="no">
        <type>ThingSet</type>
        <definition>ThingSet ts</definition>
        <argsstring></argsstring>
        <name>ts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>2024 </para>
</simplesect>
<simplesect kind="author"><para>Martin Jäger <ulink url="mailto:martin@libre.solar">martin@libre.solar</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Jean Alinei <ulink url="mailto:jean.alinei@laas.fr">jean.alinei@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Luiz Villa <ulink url="mailto:luiz.villa@laas.fr">luiz.villa@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Clément Foucher <ulink url="mailto:clement.foucher@laas.fr">clement.foucher@laas.fr</ulink> </para>
</simplesect>
<simplesect kind="author"><para>Ayoub Farah Hassan <ulink url="mailto:ayoub.farah-hassan@laas.fr">ayoub.farah-hassan@laas.fr</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="20" column="17" declfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" declline="20" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1a8a276838f7559c00693c59b0de674f95" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t can_node_addr</definition>
        <argsstring></argsstring>
        <name>can_node_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="21" column="17" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/data_objects.cpp" bodystart="48" bodyend="-1" declfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" declline="21" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1a4e454acccb5074ba0697514fc4270776" prot="public" static="yes" mutable="no">
        <type>const struct device *</type>
        <definition>const struct device* can_dev</definition>
        <argsstring></argsstring>
        <name>can_dev</name>
        <initializer>= DEVICE_DT_GET(DT_NODELABEL(can1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="22" column="27" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1aee317e2ccf1dec703647e6207554d4b0" prot="public" static="no" mutable="no">
        <type>const struct isotp_fc_opts</type>
        <definition>const struct isotp_fc_opts fc_opts</definition>
        <argsstring></argsstring>
        <name>fc_opts</name>
        <initializer>= {
    .bs = 8,                
    .stmin = 1              
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="27" column="26" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1aa500dad885fd7c27f9aee47dc8b77d4b" prot="public" static="no" mutable="no">
        <type>struct isotp_msg_id</type>
        <definition>struct isotp_msg_id rx_addr</definition>
        <argsstring></argsstring>
        <name>rx_addr</name>
        <initializer>= {
    .id_type = CAN_EXTENDED_IDENTIFIER,
    .use_ext_addr = 0,      
    .use_fixed_addr = 1,    
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="32" column="19" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1a86a5476a2dbca95379c1204db85c4809" prot="public" static="no" mutable="no">
        <type>struct isotp_msg_id</type>
        <definition>struct isotp_msg_id tx_addr</definition>
        <argsstring></argsstring>
        <name>tx_addr</name>
        <initializer>= {
    .id_type = CAN_EXTENDED_IDENTIFIER,
    .use_ext_addr = 0,      
    .use_fixed_addr = 1,    
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="38" column="19" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1ad0d0f6d0ca16076b1a4e2b11df4ed9a9" prot="public" static="yes" mutable="no">
        <type>struct isotp_recv_ctx</type>
        <definition>struct isotp_recv_ctx recv_ctx</definition>
        <argsstring></argsstring>
        <name>recv_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="44" column="28" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="thingset__isotp_8cpp_1a7b0a16afc1c1f3f3a2df60096fb43abd" prot="public" static="yes" mutable="no">
        <type>struct isotp_send_ctx</type>
        <definition>struct isotp_send_ctx send_ctx</definition>
        <argsstring></argsstring>
        <name>send_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="45" column="28" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="thingset__isotp_8cpp_1a7db4f29a9732798ba3195a5bd3799211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void send_complete_cb</definition>
        <argsstring>(int error_nr, void *arg)</argsstring>
        <name>send_complete_cb</name>
        <param>
          <type>int</type>
          <declname>error_nr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="47" column="6" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="thingset__isotp_8cpp_1a933f8d67c8664d812b757809eaa13361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void can_isotp_thread</definition>
        <argsstring>()</argsstring>
        <name>can_isotp_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="52" column="6" bodyfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" bodystart="52" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="thingset__isotp_8cpp_1ac68844c87b3fea7fbb2aa61710ceb21e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>K_THREAD_DEFINE</definition>
        <argsstring>(can_isotp, RX_THREAD_STACK_SIZE, can_isotp_thread, NULL, NULL, NULL, RX_THREAD_PRIORITY, 0, 1500)</argsstring>
        <name>K_THREAD_DEFINE</name>
        <param>
          <type>can_isotp</type>
        </param>
        <param>
          <type>RX_THREAD_STACK_SIZE</type>
        </param>
        <param>
          <type>can_isotp_thread</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>NULL</type>
        </param>
        <param>
          <type>RX_THREAD_PRIORITY</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>1500</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" line="111" column="1" declfile="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp" declline="111" declcolumn="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>The<sp/>Libre<sp/>Solar<sp/>Project<sp/>Contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/canbus/isotp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;thingset.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CommunicationAPI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>ThingSet<sp/>ts;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>can_node_addr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device*<sp/>can_dev<sp/>=<sp/>DEVICE_DT_GET(DT_NODELABEL(can1));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_THREAD_STACK_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_THREAD_PRIORITY<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_fc_opts<sp/>fc_opts<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>.bs<sp/>=<sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>.stmin<sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>separation<sp/>time<sp/>=<sp/>100<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_msg_id<sp/>rx_addr<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>.id_type<sp/>=<sp/>CAN_EXTENDED_IDENTIFIER,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>.use_ext_addr<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>ISO-TP<sp/>addressing<sp/>(using<sp/>only<sp/>CAN<sp/>ID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>.use_fixed_addr<sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>SAE<sp/>J1939<sp/>compatible<sp/>addressing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_msg_id<sp/>tx_addr<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>.id_type<sp/>=<sp/>CAN_EXTENDED_IDENTIFIER,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>.use_ext_addr<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>ISO-TP<sp/>addressing<sp/>(using<sp/>only<sp/>CAN<sp/>ID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>.use_fixed_addr<sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>SAE<sp/>J1939<sp/>compatible<sp/>addressing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_recv_ctx<sp/>recv_ctx;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">isotp_send_ctx<sp/>send_ctx;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>send_complete_cb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_nr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG_UNUSED(arg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>can_isotp_thread()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret,<sp/>rem_len,<sp/>resp_len;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_len;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_buf<sp/>*buf;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>rx_buffer[600];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>large<sp/>enough<sp/>to<sp/>receive<sp/>a<sp/>512k<sp/>flash<sp/>page<sp/>for<sp/>DFU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>tx_buffer[1000];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>communication.can.enableCan();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_is_ready(can_dev))<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>re-assign<sp/>address<sp/>in<sp/>every<sp/>loop<sp/>as<sp/>it<sp/>may<sp/>have<sp/>been<sp/>changed<sp/>via<sp/>ThingSet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_addr.ext_id<sp/>=<sp/>TS_CAN_BASE_REQRESP<sp/>|<sp/>TS_CAN_PRIO_REQRESP<sp/>|<sp/>TS_CAN_TARGET_SET(can_node_addr);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_addr.ext_id<sp/>=<sp/>TS_CAN_BASE_REQRESP<sp/>|<sp/>TS_CAN_PRIO_REQRESP<sp/>|<sp/>TS_CAN_SOURCE_SET(can_node_addr);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>isotp_bind(&amp;recv_ctx,<sp/>can_dev,<sp/>&amp;rx_addr,<sp/>&amp;tx_addr,<sp/>&amp;fc_opts,<sp/>K_FOREVER);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ISOTP_N_OK)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rem_len<sp/>=<sp/>isotp_recv_net(&amp;recv_ctx,<sp/>&amp;buf,<sp/>K_FOREVER);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem_len<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_len<sp/>+<sp/>buf-&gt;len<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer))<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;rx_buffer[req_len],<sp/>buf-&gt;data,<sp/>buf-&gt;len);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req_len<sp/>+=<sp/>buf-&gt;len;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_buf_unref(buf);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rem_len);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>unbind<sp/>the<sp/>receive<sp/>ctx<sp/>so<sp/>that<sp/>control<sp/>frames<sp/>are<sp/>received<sp/>in<sp/>the<sp/>send<sp/>ctx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isotp_unbind(&amp;recv_ctx);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_len<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buffer))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_buffer[0]<sp/>=<sp/>TS_STATUS_REQUEST_TOO_LARGE;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resp_len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req_len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>rem_len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resp_len<sp/>=<sp/>ts.process(rx_buffer,<sp/>req_len,<sp/>tx_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_buffer));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_buffer[0]<sp/>=<sp/>TS_STATUS_INTERNAL_SERVER_ERR;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resp_len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resp_len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>isotp_send(&amp;send_ctx,<sp/>can_dev,<sp/>tx_buffer,<sp/>resp_len,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;recv_ctx.tx_addr,<sp/>&amp;recv_ctx.rx_addr,<sp/>send_complete_cb,<sp/>NULL);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">K_THREAD_DEFINE(can_isotp,<sp/>RX_THREAD_STACK_SIZE,<sp/>can_isotp_thread,<sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_THREAD_PRIORITY,<sp/>0,<sp/>1500);</highlight></codeline>
    </programlisting>
    <location file="docs/core/zephyr/modules/owntech_communication/zephyr/src/thingset_isotp.cpp"/>
  </compounddef>
</doxygen>
