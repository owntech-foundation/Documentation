<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="power__init_8h" kind="file" language="C++">
    <compoundname>power_init.h</compoundname>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="power__init_8h_1a328b1f25788569fd0374200b0a50590d" prot="public" static="no" strong="no">
        <type></type>
        <name>cm_dac_t</name>
        <enumvalue id="power__init_8h_1a328b1f25788569fd0374200b0a50590da8308ee8ce4d834a47f9309087d4f5722" prot="public">
          <name>CM_DAC_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="power__init_8h_1a328b1f25788569fd0374200b0a50590da9591efd5f2d8ada76011926f036b12b6" prot="public">
          <name>CM_DAC1</name>
          <initializer>= 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="power__init_8h_1a328b1f25788569fd0374200b0a50590da9cf1b5fc136e68031cbccb2a558ad347" prot="public">
          <name>CM_DAC3</name>
          <initializer>= 30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum to define which DAC to use for current mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="163" column="1" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" bodystart="163" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="power__init_8h_1ad228fa3902f8d73a6a41babf42ba6903" prot="public" static="no" extern="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t timer_frequency</definition>
        <argsstring></argsstring>
        <name>timer_frequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a variable <computeroutput>timer_frequency</computeroutput> and initialize it with the <computeroutput>frequency</computeroutput> property from the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="174" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="30" bodyend="-1" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="174" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a908406a56ddc51e93aab0aad6d50b002" prot="public" static="no" extern="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t timer_min_frequency</definition>
        <argsstring></argsstring>
        <name>timer_min_frequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a variable &apos;timer_min_frequency&apos; and initialize it with the &apos;min-frequency&apos; property from the Device Tree node with the ID &apos;POWER_SHIELD_ID&apos;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="179" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" bodystart="186" bodyend="-1" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="179" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a1c344a26ae0bf86917f3bb08e11b8f5c" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_pwm_pin[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_pwm_pin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_pwm_pin</computeroutput> of type <computeroutput>hrtim_tu_number_t</computeroutput> and initialize it with an array containing the first element of <computeroutput>pwm_pin_num</computeroutput> properties from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="194" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="34" bodyend="35" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="194" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a94d897e0a8e5e6789d1daa678099af2d" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_pwm_x1_high[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_pwm_x1_high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_pwm_x1_high</computeroutput> and initialize it with an array of <computeroutput>timing_unit</computeroutput> properties from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="201" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="37" bodyend="38" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="201" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1afaa3ac268ff9363bcc90466c0f0cd4c3" prot="public" static="no" extern="yes" mutable="no">
        <type>adc_t</type>
        <definition>adc_t dt_adc[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_adc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_adc</computeroutput> of type <computeroutput>adc_t</computeroutput> and initialize it with an array of <computeroutput>adc</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="207" column="14" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="40" bodyend="41" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="207" declcolumn="14"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a2ca9bf00ef5fb28f3f2403a2227e94cd" prot="public" static="no" extern="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t dt_adc_decim[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_adc_decim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_adc_decim</computeroutput> of type <computeroutput>uint32_t</computeroutput> and initialize it with an array of <computeroutput>adc_decim</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="214" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="43" bodyend="44" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="214" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a60173017a742f6585796a0d28c31e840" prot="public" static="no" extern="yes" mutable="no">
        <type>hrtim_cnt_t</type>
        <definition>hrtim_cnt_t dt_modulation[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_modulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_modulation</computeroutput> of type <computeroutput>hrtim_cnt_t</computeroutput> and initialize it with an array of <computeroutput>modulation</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="221" column="20" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="46" bodyend="47" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="221" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a9ac881906f17a19920c21edac0a9b697" prot="public" static="no" extern="yes" mutable="no">
        <type>hrtim_adc_edgetrigger_t</type>
        <definition>hrtim_adc_edgetrigger_t dt_edge_trigger[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_edge_trigger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_rollover</computeroutput> of type <computeroutput>hrtim_adc_rollover_t</computeroutput> and initialize it with an array of <computeroutput>roll_over</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="228" column="32" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="49" bodyend="50" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="228" declcolumn="32"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1ad05a5b8effeb238c758abf8d69f341ef" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_rising_deadtime[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_rising_deadtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_rising_deadtime</computeroutput> of type <computeroutput>uint16_t</computeroutput> and initialize it with an array of rising dead time values from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="235" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="52" bodyend="53" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="235" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1aa7ad37cd94fe3f84d1e3f6f12ce22ddd" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_falling_deadtime[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_falling_deadtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_falling_deadtime</computeroutput> of type <computeroutput>uint16_t</computeroutput> and initialize it with an array of falling dead time values from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="242" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="55" bodyend="56" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="242" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a382bf0e47722e398be2e1e4843500ae2" prot="public" static="no" extern="yes" mutable="no">
        <type>int16_t</type>
        <definition>int16_t dt_phase_shift[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_phase_shift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_phase_shift</computeroutput> of type <computeroutput>int16_t</computeroutput> and initialize it with an array of <computeroutput>phase_shift</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="249" column="16" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="58" bodyend="59" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="249" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1af89c37eb525d41c2a29fa66027805b40" prot="public" static="no" extern="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dt_leg_count</definition>
        <argsstring></argsstring>
        <name>dt_leg_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define a variable <computeroutput>dt_leg_count</computeroutput> and initialize it with the count of children with status <computeroutput>OKAY</computeroutput> under the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="256" column="16" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="61" bodyend="-1" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="256" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a318e8e1e06f5de547a0449de990c03ed" prot="public" static="no" extern="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dt_output1_inactive[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_output1_inactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_output1_inactive</computeroutput> of type <computeroutput>uint8_t</computeroutput> and initialize it with an array of <computeroutput>output1_inactive</computeroutput> values from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="263" column="16" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="64" bodyend="65" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="263" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a09bd91e539131159af49e0740e317cf6" prot="public" static="no" extern="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t dt_output2_inactive[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_output2_inactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_output2_inactive</computeroutput> of type <computeroutput>uint8_t</computeroutput> and initialize it with an array of <computeroutput>output2_inactive</computeroutput> values from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="270" column="16" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="67" bodyend="68" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="270" declcolumn="16"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1a4e8edef338a05f6d2e91673bb387bf34" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_current_pin[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_current_pin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_current_pin</computeroutput> of type <computeroutput>uint16</computeroutput> and initialize it with an array of <computeroutput>curent_pin_num</computeroutput> property from the children of the Device Tree node with the ID <computeroutput>POWER_SHIELD_ID</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="277" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="70" bodyend="71" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="277" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1ad15b84d9315536f06ceee54cc40664e6" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_pin_driver[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_pin_driver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_pin_driver</computeroutput> of type <computeroutput>uint16</computeroutput> and initialize it with an array of <computeroutput>driver_pin_num</computeroutput> values from the children of the Device Tree node with ID <computeroutput>POWER_SHIELD_ID</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="284" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="73" bodyend="74" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="284" declcolumn="17"/>
      </memberdef>
      <memberdef kind="variable" id="power__init_8h_1aa0beaabbf271695045860ca02dec00f5" prot="public" static="no" extern="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t dt_pin_capacitor[]</definition>
        <argsstring>[]</argsstring>
        <name>dt_pin_capacitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an array <computeroutput>dt_pin_driver</computeroutput> of type <computeroutput>uint16</computeroutput> and initialize it with an array of <computeroutput>capa_pin_num</computeroutput> values from the children of the Device Tree node with ID <computeroutput>POWER_SHIELD_ID</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" line="291" column="17" bodyfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.cpp" bodystart="76" bodyend="77" declfile="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h" declline="291" declcolumn="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-present<sp/>LAAS-CNRS</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-2.1</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>@author<sp/>Ayoub<sp/>Farah<sp/>Hassan<sp/>&lt;ayoub.farah-hassan@laas.fr&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@author<sp/>Jean<sp/>Alinei<sp/>&lt;jean.alinei@owntech.org&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>@author<sp/>Clément<sp/>Foucher<sp/>&lt;clement.foucher@laas.fr&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>file<sp/>save<sp/>all<sp/>the<sp/>parameters<sp/>set<sp/>in<sp/>the<sp/>device<sp/>tree</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>POWER_INIT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POWER_INIT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hrtim.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SpinAPI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_PWM_PIN(node_id)<sp/><sp/><sp/><sp/>DT_PROP_BY_IDX(node_id,<sp/>pwm_pin_num,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_PWM_X1_HIGH(node_id)<sp/><sp/><sp/><sp/>DT_PROP_OR(node_id,<sp/>pwm_x1_high,<sp/>1),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_CURRENT_PIN(node_id)<sp/><sp/><sp/><sp/>DT_PROP_OR(node_id,<sp/>current_pin_num,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_ADC(node_id)<sp/><sp/><sp/><sp/>DT_STRING_TOKEN(node_id,<sp/>default_adc),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_EDGE_TRIGGER(node_id)<sp/><sp/><sp/>DT_STRING_TOKEN(node_id,<sp/>default_edge_trigger),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_MODULATION(node_id)<sp/>DT_STRING_TOKEN(node_id,<sp/>default_modulation),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_RISING_DT(node_id)<sp/><sp/>DT_PROP_BY_IDX(node_id,<sp/>default_dead_time,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_FALLING_DT(node_id)<sp/>DT_PROP_BY_IDX(node_id,<sp/>default_dead_time,<sp/>1),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_PHASE(node_id)<sp/><sp/>DT_PROP(node_id,<sp/>default_phase_shift),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_ADC_DECIM(node_id)<sp/><sp/>DT_PROP(node_id,<sp/>default_adc_decim),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_OUTPUT1(node_id)<sp/>DT_PROP(node_id,<sp/>output1_inactive),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_OUTPUT2(node_id)<sp/>DT_PROP(node_id,<sp/>output2_inactive),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>LEG_HAS_DRIVER(node_id)<sp/>DT_NODE_HAS_PROP(node_id,<sp/>driver_pin_num),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>LEG_DRIVER_PIN(node_id)<sp/>DT_PROP_OR(node_id,<sp/>driver_pin_num,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>LEG_HAS_CAPACITOR(node_id)<sp/>DT_NODE_HAS_PROP(node_id,<sp/>capa_pin_num),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_CAPACITOR_PIN(node_id)<sp/>DT_PROP_OR(node_id,<sp/>capa_pin_num,<sp/>0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEG_COUNTER(node_id)<sp/>+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>shield<sp/>node<sp/>identifier<sp/>in<sp/>the<sp/>device<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POWER_SHIELD_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DT_NODELABEL(powershield)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CM_DAC_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>CM_DAC1<sp/>=<sp/>25,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>CM_DAC3<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}cm_dac_t;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>timer_frequency;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>timer_min_frequency;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>timer_min_frequency;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_pwm_pin[];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_pwm_x1_high[];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>adc_t<sp/>dt_adc[];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>dt_adc_decim[];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>hrtim_cnt_t<sp/>dt_modulation[];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>hrtim_adc_edgetrigger_t<sp/>dt_edge_trigger[];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_rising_deadtime[];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_falling_deadtime[];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int16_t<sp/>dt_phase_shift[];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/>dt_leg_count;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/>dt_output1_inactive[];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/>dt_output2_inactive[];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_current_pin[];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_pin_driver[];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/>dt_pin_capacitor[];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>POWER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="docs/core/zephyr/modules/owntech_shield_api/zephyr/src/power_init.h"/>
  </compounddef>
</doxygen>
