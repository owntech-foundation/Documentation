site_name: OwnTech Documentation Center
site_url: https://docs.owntech.org
copyright: <p xmlns:cc="http://creativecommons.org/ns#" xmlns:dct="http://purl.org/dc/terms/">&copy <a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://www.owntech.org">OwnTech Foundation</a> under <a href="http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">CC BY-SA 4.0<img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1"></a></p> <a href="#__consent">Change cookie settings</a>
extra:
  analytics:
    provider: google
    property: G-WF7P4ZR5NF
  consent:
    title: Cookie Consent
    description: >-
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to
      make our documentation better.
    analytics: Google Analytics
    actions:
      - accept
      - manage
  version:
      provider: mike
  ownplot:
    version: 0.6.1
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/owntech-foundation
    - icon: fontawesome/brands/discord
      link: https://discord.com/invite/KAM8ukUYF5
    - icon: fontawesome/solid/envelope
      link: mailto:contact@owntech.org
  images:
    width: 300
    icon:
      width: 60
theme:
  name: material
  custom_dir: overrides
  favicon: images/favicon.ico
  logo: images/OwnTech.png
  extra_css:
    - stylesheets/extra.css
  features:
    - navigation.tabs
#    - navigation.indexes #Only working for .md files not generated by mkdoxy.
    - navigation.top
    - toc.follow
    - search.suggest
    - search.highlight
    - content.tabs.link
    - content.code.annotation
    - content.code.copy
    - navigation.footer
    - content.tooltips
  language: en
  palette:
    - scheme: default
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
      primary: teal
      accent: grey
    - scheme: slate
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode
      primary: teal
      accent: lime

plugins:
  - search
  - macros
  - mkdoxy:
      projects:
        powerAPI: # name of project must be alphanumeric + numbers (without spaces)
          src-dirs: docs/core/ # path to source code (support multiple paths separated by space) => INPUT
          full-doc: True # if you want to generate full documentation
#          template-dir: template-custom
          doxy-cfg: # standard doxygen configuration (key: value)
            FILE_PATTERNS: "*/public_api/*.c */public_api/*.cpp */public_api/*.h* */owntech_communication/zephyr/src/* */owntech_spin_api/zephyr/src/*" # specify file patterns to filter out
            RECURSIVE: True # recursive search in source directories
            SHOW_NAMESPACES: False # don't show namespaces in documentation
            ENABLE_PREPROCESSING: False
            OPTIMIZE_OUTPUT_FOR_C: True

        controlLibrary: # name of project must be alphanumeric + numbers (without spaces)
          src-dirs: docs/controlLibrary/src # path to source code (support multiple paths separated by space) => INPUT
          full-doc: True # if you want to generate full documentation
#          template-dir: templates_custom
          doxy-cfg: # standard doxygen configuration (key: value)
            FILE_PATTERNS: "*.h *.c" # specify file patterns to filter out
            RECURSIVE: True # recursive search in source directories
            SHOW_NAMESPACES: False
            OPTIMIZE_OUTPUT_FOR_C: True

        # OwnModels: # name of project must be alphanumeric + numbers (without spaces)
        #   src-dirs: docs/OwnModels/ # path to source code (support multiple paths separated by space) => INPUT
        #   full-doc: True # if you want to generate full documentation


markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - admonition
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  - pymdownx.details
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.mark
  - attr_list
  - md_in_html
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.arithmatex:
      generic: true
  - abbr


extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js



nav:
    - Home:
        - index.md
    - Getting Started:
        - Environment Setup: core/docs/environment_setup.md
        - First Example: core/docs/first_example.md
        - OwnPlot Setup: core/docs/ownplot_setup.md
        - MATLAB:
          - Getting started: Matlab/docs/getting_started.md
          - First compilation: Matlab/docs/first_compilation_with_matlab.md
          - Open loop: Matlab/docs/open_loop_buck.md
          - Closed loop: Matlab/docs/closed_loop_buck.md
    - Examples:
        - Home: examples/docs/home.md
        - SPIN:
            - ADC:
                - Software triggered measurement: examples/SPIN/ADC/adc_software_trigger/README.md
                - Synchronous measurements: examples/SPIN/ADC/adc_hrtim_trigger/README.md
            - DAC:
                - Signal generation: examples/SPIN/DAC/signal_generation/README.md
            - LED:
                - Blinky: examples/SPIN/LED/blinky/README.md
            - PWM:
                - Duty cycle control: examples/SPIN/PWM/duty_cycle_setting/README.md
                - Phase shift control: examples/SPIN/PWM/phase_shift/README.md
                - Multiple PWM operation: examples/SPIN/PWM/multiple_pwm/README.md
            - Timer:
                - Incremental encoder: examples/SPIN/TIMER/incremental_encoder/README.md
        - TWIST:
            - DC DC topology examples:
                - Buck voltage mode: examples/TWIST/DC_DC/buck_voltage_mode/README.md
                - Buck current mode: examples/TWIST/DC_DC/buck_current_mode/README.md
                - Boost voltage mode: examples/TWIST/DC_DC/boost_voltage_mode/README.md
                - Interleaved Buck: examples/TWIST/DC_DC/interleaved/README.md
            - Microgrid examples:
                - AC client server: examples/TWIST/Microgrid/AC_client_server/README.md
                - AC peer to peer: examples/TWIST/Microgrid/AC_peer_to_peer/README.md
                - DC client server: examples/TWIST/Microgrid/DC_client_server/README.md
                - DC droop: examples/TWIST/Microgrid/DC_droop/README.md
            - DC AC topology examples:
                - Grid forming Inverter: examples/TWIST/DC_AC/grid_forming/README.md
                - Grid following Inverter: examples/TWIST/DC_AC/grid_following/README.md
    - Power API:
        - Home: core/docs/powerAPI.md
        - Bootloader: bootloader/docs/getting_started.md
        - SPIN API:
            - Class: powerAPI/classSpinAPI.md
            - ADC: core/docs/adc.md
            - COMP: powerAPI/classCompHAL.md
            - DAC: core/docs/dac.md
            - GPIO: core/docs/gpio.md
            - LED: powerAPI/classLedHAL.md
            - PWM: core/docs/pwm.md
            - TIMER: powerAPI/classTimerHAL.md
            - UART: powerAPI/classUartHAL.md
            - VERSION: powerAPI/classVersionHAL.md
        - TWIST API: core/docs/twistAPI.md
        - Data API: core/docs/dataAPI.md
        - Task API: core/docs/scheduling.md
        - Communication API:
            - Class: powerAPI/classCommunicationAPI.md
            - Analog Communication: powerAPI/classAnalogCommunication.md
            - RS485: powerAPI/classRs485Communication.md
            - CAN: powerAPI/classCanCommunication.md
            - Real Time Sync: powerAPI/classSyncCommunication.md
        - Safety API: powerAPI/classsafety.md
    - Control Library:
        - Getting started: controlLibrary/docs/getting-started.md
        - Controller:
          - Generic Controller:
            - Principle: controlLibrary/docs/controller.md
            - API : controlLibrary/classController.md
          - PID:
            - Use: controlLibrary/docs/use-pid.md
            - API : controlLibrary/classPid.md
            - Parameters API: controlLibrary/structPidParams.md
          - Proportional Resonant (PR):
            - Use: controlLibrary/docs/use-pr.md
            - API : controlLibrary/classPr.md
            - Parameters API: controlLibrary/structPrParams.md
          - RST:
            - Use: controlLibrary/docs/use-rst.md
            - API : controlLibrary/classRST.md
            - Parameters API: controlLibrary/structRstParams.md
        - Filters:
          - Intro: controlLibrary/docs/use-filters.md
          - 1st order Low Pass Filter:
            - Use: controlLibrary/docs/use-firstorder.md
            - API: controlLibrary/classLowPassFirstOrderFilter.md
          - Notch Filter:
            - Use: controlLibrary/docs/use-notchfilter.md
            - API: controlLibrary/classNotchFilter.md
          - Phase Lock Loop (PLL):
            - Use: controlLibrary/docs/use-pll.md
            - API : controlLibrary/classPllSinus.md
            - PllDatas API: controlLibrary/structPllDatas.md

    - MATLAB:
        - Getting started: Matlab/docs/getting_started.md
        - First compilation: Matlab/docs/first_compilation_with_matlab.md
        - Open loop: Matlab/docs/open_loop_buck.md
        - Closed loop: Matlab/docs/closed_loop_buck.md

    - OwnModels:
        - Getting started with PLECS: OwnModels/docs/getting_started.md
        - Open loop example: OwnModels/docs/first_example.md
        - Voltage mode example: OwnModels/docs/voltage_mode_simulation.md


    # - Hardware:
    #     - TWIST: twist/docs/getting_started.md
    #     - TWIST Sparse: twist/getting_started.md

    - OwnPlot:
        - OwnPlot/docs/index.md
        - User Manual:
            - OwnPlot/docs/user-manual/home.md
            - Getting Started:
                - Setup: OwnPlot/docs/user-manual/setup.md
                - Dev board demo code: OwnPlot/docs/user-manual/dev-board-demo.md
                - My First Port: OwnPlot/docs/user-manual/first-steps.md
            - Components:
                - Tabs: OwnPlot/docs/user-manual/components/tabs.md
                - Terminal: OwnPlot/docs/user-manual/components/terminal.md
                - Plotter: OwnPlot/docs/user-manual/components/plotter.md
            - Troubleshooting: OwnPlot/docs/user-manual/troubleshooting.md
        - Developer Manual:
            - OwnPlot/docs/dev-manual/home.md
            - Architecture: OwnPlot/docs/dev-manual/arch.md

# Custom Homepage Elements
home_cover_image: 0.9.0/docs/images/owntech_home.svg # This path starts at your root mkdocs directory.
home_tagline: Power at the palm of your hands
home_description: |
  The power electronics API you need to deploy your application in minutes
   - Browse customizable examples, and taylor fit it to your needs.

# Gradient Color
home_gradient_hsla: hsla(0, 0%, 9%, 1) # Default Green: hsla(160deg,47%,55%,1)

# Custom Homepage Button(s)
home_button1_name: Get Started                   # Comment this parameter out to remove the button.
home_button1_url: core/docs/environment_setup    # This path starts at your root mkdocs directory.
home_button1_theme: md-button md-button--primary # Options: "md-button", "md-button md-button--primary"
home_button1_icon: people                        # Options: "people", "gear", "image"
home_button1_blurb: Start here                   # Short description of this button / section.

home_button2_name: Learn More                     # Comment this parameter out to remove the button.
home_button2_url:                                 # This path starts at your root mkdocs directory.
home_button2_theme: md-button                     # Options: "md-button", "md-button md-button--primary"
home_button2_icon: gear                           # Options: "people", "gear", "image"
home_button2_blurb: I'm curious tell me more      # Short description of this button / section.


# Homepage Code Execution
home_execute_js: | # Javascript to execute when accessing the homepage
  console.log("This is an example!");
